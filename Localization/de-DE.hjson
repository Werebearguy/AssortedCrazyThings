Mods: {
	AssortedCrazyThings: {
		Buffs: {
			# Cute Slimes
			CuteSlimeBlackBuff: {
				// DisplayName: Cute Black Slime
				// Description: A cute black slime is following you
			}

			CuteSlimeBlueBuff: {
				// DisplayName: Cute Blue Slime
				// Description: A cute blue slime is following you
			}

			CuteSlimeCorruptBuff: {
				// DisplayName: Cute Corrupt Slime
				// Description: A cute corrupt slime is following you
			}

			CuteSlimeCorruptJungleBuff: {
				// DisplayName: Cute Corrupt Jungle Slime
				// Description: A cute corrupt jungle slime is following you
			}

			CuteSlimeCrimsonBuff: {
				// DisplayName: Cute Crimson Slime
				// Description: A cute crimson slime is following you
			}

			CuteSlimeCrimsonJungleBuff: {
				// DisplayName: Cute Crimson Jungle Slime
				// Description: A cute crimson jungle slime is following you
			}

			CuteSlimeDungeonBuff: {
				// DisplayName: Cute Dungeon Slime
				// Description: A cute dungeon slime is following you
			}

			CuteSlimeGoldenBuff: {
				// DisplayName: Cute Golden Slime
				// Description: A cute golden slime is following you
			}

			CuteSlimeGreenBuff: {
				// DisplayName: Cute Green Slime
				// Description: A cute green slime is following you
			}

			CuteSlimeHoneyBuff: {
				// DisplayName: Cute Honey Slime
				// Description: A cute honey slime is following you
			}

			CuteSlimeIceBuff: {
				// DisplayName: Cute Ice Slime
				// Description: A cute ice slime is following you
			}

			CuteSlimeIlluminantBuff: {
				// DisplayName: Cute Illuminant Slime
				// Description: A cute illuminant slime is following you
			}

			CuteSlimeJungleBuff: {
				// DisplayName: Cute Jungle Slime
				// Description: A cute jungle slime is following you
			}

			CuteSlimeLavaBuff: {
				// DisplayName: Cute Lava Slime
				// Description: A cute lava slime is following you
			}

			CuteSlimePinkBuff: {
				// DisplayName: Cute Pink Slime
				// Description: A cute pink slime is following you
			}

			CuteSlimePinkIceBuff: {
				// DisplayName: Cute Pink Ice Slime
				// Description: A cute pink ice slime is following you
			}

			CuteSlimePrincessBuff: {
				// DisplayName: Cute Princess Slime
				// Description: A cute princess slime is following you
			}

			CuteSlimePurpleBuff: {
				// DisplayName: Cute Purple Slime
				// Description: A cute purple slime is following you
			}

			CuteSlimePurpleIceBuff: {
				// DisplayName: Cute Purple Ice Slime
				// Description: A cute purple ice slime is following you
			}

			CuteSlimeQueenBuff: {
				// DisplayName: Cute Queen Slime
				// Description: A cute queen slime is following you
			}

			CuteSlimeRainbowBuff: {
				// DisplayName: Cute Rainbow Slime
				// Description: A cute rainbow slime is following you
			}

			CuteSlimeRedBuff: {
				// DisplayName: Cute Red Slime
				// Description: A cute red slime is following you
			}

			CuteSlimeRedIceBuff: {
				// DisplayName: Cute Red Ice Slime
				// Description: A cute red ice slime is following you
			}

			CuteSlimeSandBuff: {
				// DisplayName: Cute Sand Slime
				// Description: A cute sand slime is following you
			}

			CuteSlimeShimmerBuff: {
				// DisplayName: Cute Shimmer Slime
				// Description: A cute shimmer slime is following you
			}

			CuteSlimeToxicBuff: {
				// DisplayName: Cute Toxic Slime
				// Description: A cute toxic slime is following you
			}

			CuteSlimeXmasBuff: {
				// DisplayName: Cute Christmas Slime
				// Description: A cute Christmas slime is following you
			}

			CuteSlimeYellowBuff: {
				// DisplayName: Cute Yellow Slime
				// Description: A cute yellow slime is following you
			}

			# Pets. AoMM versions are auto-generated
			AbeeminationBuff: {
				// DisplayName: Abeemination
				// Description: An abeemination is following you
			}

			AlienHornetBuff: {
				// DisplayName: Alien Hornet
				// Description: An alien hornet is following you
			}

			AnimatedTomeBuff: {
				// DisplayName: Animated Tome
				// Description: An animated tome is following you
			}

			AnomalocarisBuff: {
				// DisplayName: Anomalocaris
				// Description: A little prehistoric shrimp is following you
			}

			BabyCrimeraBuff: {
				// DisplayName: Baby Crimera
				// Description: A little crimera is following you
			}

			BabyIchorStickerBuff: {
				// DisplayName: Lil' Ichy
				// Description: A baby ichor sticker is following you
			}

			BabyOcramBuff: {
				// DisplayName: Baby Ocram
				// Description: What could have been now follows you
			}

			BrainofConfusionBuff: {
				// DisplayName: Brain of Confusion
				// Description: A brain of confusion is following you
			}

			ChunkyandMeatballBuff: {
				// DisplayName: Chunky and Meatball
				// Description: Two reunited brothers are following you
			}

			ChunkySlimeBuff: {
				// DisplayName: Chunky
				// Description: Chunky is following you
			}

			CompanionDungeonSoulPetBuff: {
				// DisplayName: Companion Soul
				// CommonDescription: A friendly dungeon soul is following you
				/* Description:
					'''
					{$Buffs.CompanionDungeonSoulPetBuff.CommonDescription}
					Light pet slot
					''' */
			}

			CompanionDungeonSoulPetBuff2: {
				// DisplayName: "{$Buffs.CompanionDungeonSoulPetBuff.DisplayName}"
				/* Description:
					'''
					{$Buffs.CompanionDungeonSoulPetBuff.CommonDescription}
					Pet slot
					''' */
			}

			CursedSkullBuff: {
				// DisplayName: Cursed Skull
				// Description: It won't curse you, I promise
			}

			CuteGastropodBuff: {
				// DisplayName: Cute Gastropod
				// Description: A cute gastropod is following you
			}

			CuteLamiaPetBuff: {
				// DisplayName: Small Snake
				// Description: A small snake is following you
			}

			DemonHeartBuff: {
				// DisplayName: Demon Heart
				// Description: A demon heart is following you
			}

			DetachedHungryBuff: {
				// DisplayName: Detached Hungry
				// Description: You might be the next meal...
			}

			DocileDemonEyeBuff: {
				// DisplayName: Docile Demon Eye
				// Description: A demon eye is following you
			}

			DrumstickElementalBuff: {
				// DisplayName: Drumstick Elemental
				// Description: Dinner is following you
			}

			DynamiteBunnyBuff: {
				// DisplayName: Dynamite Bunny
				// Description: A little dynamite bunny is following you
			}

			EnchantedSwordBuff: {
				// DisplayName: Enchanted Sword
				// Description: The enchanted sword watches over you
			}

			FailureSlimeBuff: {
				// DisplayName: Failure Slime
				// Description: A strange creature is following you
			}

			FairySlimeBuff: {
				// DisplayName: Fairy Slime
				// Description: A fairy slime is following you
			}

			FairySwarmBuff: {
				// DisplayName: Fairy Swarm
				// Description: A fairy swarm is following you
			}

			GhostMartianBuff: {
				// DisplayName: Ghost Martian
				// Description: A vengeful invader's ghost is following you
			}

			GobletBuff: {
				// DisplayName: Goblet
				// Description: A tiny goblin is following you
			}

			HornedSlimeBuff: {
				// DisplayName: Horned Slime
				// Description: A horned slime is following you
			}

			IlluminantSlimeBuff: {
				// DisplayName: Illuminant Slime
				// Description: An illuminant slime is following you
			}

			JoyousSlimeBuff: {
				// DisplayName: Joyous Slime
				// Description: A joyous slime is following you
			}

			LifelikeMechanicalFrogBuff: {
				// DisplayName: Lifelike Mechanical Frog
				// Description: Whatever happened to this frog at the anvil is a mystery
			}

			LilWrapsBuff: {
				// DisplayName: Lil' Wraps
				// Description: A mummy is following you
			}

			MeatballSlimeBuff: {
				// DisplayName: Meatball
				// Description: Meatball is following you
			}

			MetroidPetBuff: {
				// DisplayName: Metroid
				// Description: A space parasite is following you
			}

			MiniAntlionBuff: {
				// DisplayName: Baby Antlion
				// Description: A baby antlion is following you
			}

			MiniMegalodonBuff: {
				// DisplayName: Mini Megalodon
				// Description: It recognizes your strength...for now
			}

			NumberMuncherBuff: {
				// DisplayName: Number Muncher
				// Description: An educated amphibian is following you
			}

			OceanSlimeBuff: {
				// DisplayName: Ocean Slime
				// Description: An ocean slime is following you
			}

			PetCultistBuff: {
				// DisplayName: Dwarf Cultist
				// Description: A tiny cultist is following you
			}

			PetDestroyerBuff: {
				// DisplayName: Tiny Destroyer
				// Description: A tiny Destroyer and two tiny Probes are following you
			}

			PetEaterofWorldsBuff: {
				// DisplayName: Tiny Eater of Worlds
				// Description: A tiny Eater of Worlds is following you
			}

			PetFishronBuff: {
				// DisplayName: Fishron
				// Description: A fishron is following you
			}

			PetGoldfishBuff: {
				// DisplayName: Possessed Goldfish
				// Description: A possessed goldfish is following you
			}

			PetGolemHeadBuff: {
				// DisplayName: Replica Golem Head
				// Description: A replica Golem head watches over you
			}

			PetHarvesterBuff: {
				// DisplayName: Stubborn Bird
				// Description: A stubborn bird is following you
			}

			PetMoonBuff: {
				// DisplayName: Personal Moon
				// Description: A small moon is providing you with constant moonlight
			}

			PetPlanteraBuff: {
				// DisplayName: Plantera Sprout
				// Description: A Plantera sprout is following you
			}

			PetQueenSlimeBuff: {
				// DisplayName: Playful Slimelings
				// Description: A trio of slimelings is following you
			}

			PetSunBuff: {
				// DisplayName: Personal Sun
				// Description: A small sun is providing you with constant sunlight
			}

			PetSunMoonBuff: {
				// DisplayName: Personal Sun and Moon
				/* Description:
					'''
					A small sun and moon are providing you with constant light
					'No adverse gravitational effects will happen'
					''' */
			}

			PigronataBuff: {
				// DisplayName: Pigronata
				// Description: A pigronata is thankful that you did not bust it
			}

			PrinceSlimeBuff: {
				// DisplayName: Prince Slime
				// Description: A prince slime is following you
			}

			QueenLarvaBuff: {
				// DisplayName: Queen Larva
				// Description: A Queen Bee larva is following you
			}

			RainbowSlimeBuff: {
				// DisplayName: Rainbow Slime
				// Description: A rainbow slime is following you
			}

			SkeletronHandBuff: {
				// DisplayName: Skeletron's Spare Hand
				// Description: Skeletron's hand is attached to you
			}

			SkeletronPrimeHandBuff: {
				// DisplayName: Skeletron Prime's Spare Hand
				// Description: Skeletron Prime's hand is attached to you
			}

			StingSlimeBuff: {
				// DisplayName: Sting Slime
				// Description: A sting slime is following you
			}

			StrangeRobotBuff: {
				// DisplayName: Strange Robot
				// Description: A strange robot is following you
			}

			SuspiciousNuggetBuff: {
				// DisplayName: Suspicious Nugget
				// Description: A suspicious nugget is following you
			}

			SwarmofCthulhuBuff: {
				// DisplayName: Swarm of Cthulhu
				// Description: A swarm of Cthulhu is following you
			}

			TinyTwinsBuff: {
				// DisplayName: Tiny Twins
				// Description: The Twins are watching you
			}

			TorchGodLightPetBuff: {
				// DisplayName: Godly Torch
				// Description: "'Your torch placement has been deemed unnecessary. I will do it correctly.'"
				// EnableSmartCursor: Enable 'Smart Cursor' to automatically place torches
				// NoTorches: No normal torches found to place
			}

			TorturedSoulBuff: {
				// DisplayName: Tortured Soul
				// Description: Shouldn't have been so greedy, eh?
			}

			TrueObservingEyeBuff: {
				// DisplayName: True Observing Eye
				// Description: A tiny True Eye of Cthulhu is following you
			}

			TurtleSlimeBuff: {
				// DisplayName: Turtle Slime
				// Description: A turtle slime is following you
			}

			VampireBatBuff: {
				// DisplayName: Vampire Bat
				// Description: A particularly dashing vampire is following you
			}

			WallFragmentBuff: {
				// DisplayName: Wall Fragment
				// Description: Several fragments of the Wall are following you
			}

			YoungHarpyBuff: {
				// DisplayName: Young Harpy
				// Description: A young harpy is following you
			}

			YoungWyvernBuff: {
				// DisplayName: Young Wyvern
				// Description: A young wyvern is following you
			}

			WobyBuff: {
				// DisplayName: Woby, 'A lovable dog...'
				// Description: A loyal canine is following you
			}

			KingGuppyBuff: {
				// DisplayName: King Guppy
				// Description: The king of guppies is following you
			}

			PetCloudfishBuff: {
				// DisplayName: Cloudfish
				// Description: A majestic cloudfish is following you
			}

			PetDreadnautilusBuff: {
				// DisplayName: Chambered Chum
				// Description: A small nautilus...
			}

			ShortfuseCrabBuff: {
				// DisplayName: Shortfuse Crab
				// Description: A shortfuse crab is following you
			}

			CompanionDungeonSoulMinionBuff: {
				// DisplayName: Companion Soul Minion
				// Description: A friendly Soul is fighting for you
				// TinyDungeonSouls: Tiny Dungeon Souls
			}

			CuteSlimeSpawnEnableBuff: {
				// DisplayName: Jellied Ale
				// Description: Your perception of slimes is a bit off...
				// CuteSlimesCanSpawn: Cute Slimes that can spawn
				// None: None
			}

			DroneControllerBuff: {
				// DisplayName: Drone Controller
				// Description: Command a swarm of drones
			}

			EmpoweringBuff: {
				// DisplayName: Empowering
				// Description: You get stronger the longer you don't receive damage
				// IncreasedDamage: Increased Damage: {0}%
			}

			EnhancedHunterBuff: {
				// DisplayName: Enhanced Hunter
				// Description: Shows the location of enemies outside your vision range
			}

			// EagerUnderlingBuff.DisplayName: Eager Underling
			// ShyUnderlingBuff.DisplayName: Shy Underling
			// SeriousUnderlingBuff.DisplayName: Serious Underling

			SigilOfTheWingBuff: {
				// DisplayName: Blessing of the Wing
				// Description: Your spirit hangs on by a thread
			}

			BabyHarvesterBuff: {
				// DisplayName: Ominous Bird
				# Do not translate Description
				// Description: REPLACEME
				// Absorbed: The bird has absorbed {0} souls
				// Tier1: What's this bird doing?
				// Tier2: I wonder if it will keep growing
				// Tier3: I'm not sure it should keep eating...
			}

			SoulBurnBuff: {
				// DisplayName: Soul Burn
				// Description: Rapidly losing life
			}

			SlimePackMinionBuff: {
				// DisplayName: Slime
				// Description: A friendly Slime from your Knapsack is fighting for you
			}

			SoulBuff: {
				// DisplayName: Soul
				// Description: Releases a soul
			}

			StarRodBuff: {
				// DisplayName: Star Rod
				// Description: Falling Stars will land closer to you
			}

			NeurotoxinBuff: {
				// CommonName: Neurotoxin
				// CommonDescription: Rapidly losing life
			}

			/* Campfire.WyvernCampfireNearby:
				'''
				{$Items.WyvernCampfireItem.DisplayName} nearby:
				You are protected from Wyverns
				Harpy feathers don't knock you away
				''' */
		}

		Common: {
			// ConcatenateTwo: "{0} {1}"
			// AoMMVersion: (AoMM version)
			// Selected: Selected: {0}
			// BaseDamage: Base Damage: {0}
			// BaseKnockback: Base Knockback: {0}

			Tooltips: {
				// PetHasAltSkins: Appearance can be changed with {$Items.VanitySelector.DisplayName}
				// GoblinUnderlingBuff.CommonDescription: A loyal underling is fighting for you

				GoblinUnderlingItem: {
					/* CommonTooltip:
						'''
						Class can be changed with [c/{0}:<right>]
						Gets stronger throughout progression
						Only one can be summoned
						''' */
					/* CommonTooltipFormat:
						'''
						{0}
						{1}
						{2}
						''' */
					// CantSwitchClassDuringCombat: Cannot switch classes during combat
					// PostMLTooltip: Damage can be increased in the {$Configs.ContentConfig.DisplayName}
				}
			}
		}

		Items: {
			# Cute Slimes
			CuteSlime: {
				// AccessoryBlacklisted: Blacklisted
				// AccessoryNone: None
				// HatSlot: Hat Slot: {0}
				// BodySlot: Body Slot: {0}
				// CarriedSlot: Carry Slot: {0}
				// AccessorySlot: Accessory Slot: {0}
			}

			CuteSlimeBlackItem: {
				// DisplayName: Bottled Cute Black Slime
				// Tooltip: Summons a cute black slime to follow you
			}

			CuteSlimeBlueItem: {
				// DisplayName: Bottled Cute Blue Slime
				// Tooltip: Summons a cute blue slime to follow you
			}

			CuteSlimeCorruptItem: {
				// DisplayName: Bottled Cute Corrupt Slime
				// Tooltip: Summons a cute corrupt slime to follow you
			}

			CuteSlimeCorruptJungleItem: {
				// DisplayName: Bottled Cute Corrupt Jungle Slime
				// Tooltip: Summons a cute corrupt jungle slime to follow you
			}

			CuteSlimeCrimsonItem: {
				// DisplayName: Bottled Cute Crimson Slime
				// Tooltip: Summons a cute crimson slime to follow you
			}

			CuteSlimeCrimsonJungleItem: {
				// DisplayName: Bottled Cute Crimson Jungle Slime
				// Tooltip: Summons a cute crimson jungle slime to follow you
			}

			CuteSlimeDungeonItem: {
				// DisplayName: Bottled Cute Dungeon Slime
				// Tooltip: Summons a cute dungeon slime to follow you
			}

			CuteSlimeGoldenItem: {
				// DisplayName: Bottled Cute Golden Slime
				// Tooltip: Summons a cute golden slime to follow you
			}

			CuteSlimeGreenItem: {
				// DisplayName: Bottled Cute Green Slime
				// Tooltip: Summons a cute green slime to follow you
			}

			CuteSlimeHoneyItem: {
				// DisplayName: Bottled Cute Honey Slime
				// Tooltip: Summons a cute honey slime to follow you
			}

			CuteSlimeIceItem: {
				// DisplayName: Bottled Cute Ice Slime
				// Tooltip: Summons a cute ice slime to follow you
			}

			CuteSlimeIlluminantItem: {
				// DisplayName: Bottled Cute Illuminant Slime
				// Tooltip: Summons a cute illuminant slime to follow you
			}

			CuteSlimeJungleItem: {
				// DisplayName: Bottled Cute Jungle Slime
				// Tooltip: Summons a cute jungle slime to follow you
			}

			CuteSlimeLavaItem: {
				// DisplayName: Bottled Cute Lava Slime
				// Tooltip: Summons a cute lava slime to follow you
			}

			CuteSlimePinkItem: {
				// DisplayName: Bottled Cute Pink Slime
				// Tooltip: Summons a cute pink slime to follow you
			}

			CuteSlimePinkIceItem: {
				// DisplayName: Bottled Cute Pink Ice Slime
				// Tooltip: Summons a cute pink ice slime to follow you
			}

			CuteSlimePrincessItem: {
				// DisplayName: Bottled Cute Princess Slime
				// Tooltip: Summons a cute princess slime to follow you
			}

			CuteSlimePurpleItem: {
				// DisplayName: Bottled Cute Purple Slime
				// Tooltip: Summons a cute purple slime to follow you
			}

			CuteSlimePurpleIceItem: {
				// DisplayName: Bottled Cute Purple Ice Slime
				// Tooltip: Summons a cute purple ice slime to follow you
			}

			CuteSlimeQueenItem: {
				// DisplayName: Bottled Cute Queen Slime
				// Tooltip: Summons a cute queen slime to follow you
			}

			CuteSlimeRainbowItem: {
				// DisplayName: Bottled Cute Rainbow Slime
				// Tooltip: Summons a cute rainbow slime to follow you
			}

			CuteSlimeRedItem: {
				// DisplayName: Bottled Cute Red Slime
				// Tooltip: Summons a cute red slime to follow you
			}

			CuteSlimeRedIceItem: {
				// DisplayName: Bottled Cute Red Ice Slime
				// Tooltip: Summons a cute red ice slime to follow you
			}

			CuteSlimeSandItem: {
				// DisplayName: Bottled Cute Sand Slime
				// Tooltip: Summons a cute sand slime to follow you
			}

			CuteSlimeShimmerItem: {
				// DisplayName: Bottled Cute Shimmer Slime
				// Tooltip: Summons a cute shimmer slime to follow you
			}

			CuteSlimeToxicItem: {
				// DisplayName: Bottled Cute Toxic Slime
				// Tooltip: Summons a cute toxic slime to follow you
			}

			CuteSlimeXmasItem: {
				// DisplayName: Bottled Cute Christmas Slime
				// Tooltip: Summons a cute christmas slime to follow you
			}

			CuteSlimeYellowItem: {
				// DisplayName: Bottled Cute Yellow Slime
				// Tooltip: Summons a cute yellow slime to follow you
			}

			# Pets. AoMM versions are auto-generated
			AbeeminationItem: {
				// DisplayName: Abeemination
				/* Tooltip:
					'''
					Summons a friendly abeemination to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			AlienHornetItem: {
				// DisplayName: Vortex Nectar
				// Tooltip: Summons a friendly alien hornet to follow you
			}

			AnimatedTomeItem: {
				// DisplayName: Animated Tome
				/* Tooltip:
					'''
					Summons a friendly animated tome to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			AnomalocarisItem: {
				// DisplayName: Ornery Shrimp
				/* Tooltip:
					'''
					Summons a prehistoric shrimp to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			BabyCrimeraItem: {
				// DisplayName: Juicy Vertebrae
				// Tooltip: Summons a baby crimera to follow you
			}

			BabyIchorStickerItem: {
				// DisplayName: Sleeping Ichor Sticker
				// Tooltip: Summons a baby ichor sticker to follow you
			}

			BabyOcramItem: {
				// DisplayName: Baby Ocram
				// Tooltip: Summons a miniature Ocram that follows you
			}

			BrainofConfusionItem: {
				// DisplayName: Brain of Confusion
				// Tooltip: Summons a brain of confusion to follow aimlessly behind you
			}

			ChunkyandMeatballItem: {
				// DisplayName: Chunky and Meatball
				// Tooltip: Summons a pair of inseperable brothers to follow you
			}

			ChunkySlimeItem: {
				// DisplayName: Bottled Chunky
				// Tooltip: Summons Chunky to follow you
			}

			CompanionDungeonSoulPetItem: {
				// DisplayName: Companion Soul
				// CommonTooltip: Summons a friendly Soul to light your way
				/* Tooltip:
					'''
					{$Items.CompanionDungeonSoulPetItem.CommonTooltip}
					Light pet slot
					''' */
			}

			CompanionDungeonSoulPetItem2: {
				// DisplayName: "{$Items.CompanionDungeonSoulPetItem.DisplayName}"
				/* Tooltip:
					'''
					{$Items.CompanionDungeonSoulPetItem.CommonTooltip}
					Pet slot
					''' */
			}

			CursedSkullItem: {
				// DisplayName: Inert Skull
				/* Tooltip:
					'''
					Summons a friendly cursed skull that follows you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			CuteGastropodItem: {
				// DisplayName: Mysterious Pod
				// Tooltip: Summons a cute gastropod to follow you
			}

			CuteLamiaPetItem: {
				// DisplayName: Shaking Snake Pot
				/* Tooltip:
					'''
					Summons a small, friendly snake to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			DemonHeartItem: {
				// DisplayName: Demon Heart
				// Tooltip: Summons a friendly demon heart to follow you
			}

			DetachedHungryItem: {
				// DisplayName: Unconscious Hungry
				// Tooltip: Summons a detached hungry to follow you
			}

			DocileDemonEyeItem: {
				// DisplayName: Docile Demon Eye
				/* Tooltip:
					'''
					Summons a docile demon eye to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			DrumstickElementalItem: {
				// DisplayName: Magical Drumstick
				// Tooltip: Summons a delicious drumstick elemental to follow you
			}

			DynamiteBunnyItem: {
				// DisplayName: Dynamite Carrot
				/* Tooltip:
					'''
					Summons a dynamite bunny to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			EnchantedSwordItem: {
				// DisplayName: Enchanted Sword
				// Tooltip: Summons an enchanted sword to watch over you
			}

			FailureSlimeItem: {
				// DisplayName: Slimy Skull
				// Tooltip: Summons a strange creature to follow you
			}

			FairySlimeItem: {
				// DisplayName: Bottled Fairy Slime
				// Tooltip: Summons a friendly fairy slime to follow you
			}

			FairySwarmItem: {
				// DisplayName: Bottle of Assorted Fairies
				// Tooltip: Summons several fairies to swarm around you
			}

			GhostMartianItem: {
				// DisplayName: K-II Meter
				// Tooltip: Summons a vengeful invader's ghost to follow you
			}

			GobletItem: {
				// DisplayName: Goblet Battle Standard
				// Tooltip: Summons a tiny goblin to follow you
			}

			HornedSlimeItem: {
				// DisplayName: Bottled Horned Slime
				// Tooltip: Summons a friendly horned slime to follow you
			}

			IlluminantSlimeItem: {
				// DisplayName: Bottled Illuminant Slime
				// Tooltip: Summons a friendly illuminant slime to follow you
			}

			JoyousSlimeItem: {
				// DisplayName: Bottled Joyous Slime
				/* Tooltip:
					'''
					Summons a friendly joyous slime to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			LifelikeMechanicalFrogItem: {
				// DisplayName: Lifelike Mechanical Frog
				/* Tooltip:
					'''
					Summons a friendly frog to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			LilWrapsItem: {
				// DisplayName: Gilded Coffin
				/* Tooltip:
					'''
					Summons a mummy to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			MeatballSlimeItem: {
				// DisplayName: Bottled Meatball
				// Tooltip: Summons Meatball to follow you
			}

			MetroidPetItem: {
				// DisplayName: Parasite Container
				/* Tooltip:
					'''
					Summons a space parasite to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			MiniAntlionItem: {
				// DisplayName: Antlion Egg
				/* Tooltip:
					'''
					Summons a friendly baby antlion to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			MiniMegalodonItem: {
				// DisplayName: Small Megalodon Tooth
				// Tooltip: Summons a friendly mini megalodon that follows you
			}

			NumberMuncherItem: {
				// DisplayName: Archaic Storage Device
				// Tooltip: Summons an educated amphibian that follows you
			}

			OceanSlimeItem: {
				// DisplayName: Bottled Ocean Slime
				/* Tooltip:
					'''
					Summons a friendly ocean slime to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PetCultistItem: {
				// DisplayName: Tiny Ominous Coin
				// Tooltip: Summons a tiny cultist to follow you and heal when injured
			}

			PetDestroyerItem: {
				// DisplayName: Destroyer's Core
				// Tooltip: Summons a tiny Destroyer and two tiny probes to follow you
			}

			PetEaterofWorldsItem: {
				// DisplayName: Cracked Worm Egg
				// Tooltip: Summons a tiny Eater of Worlds to follow you
			}

			PetFishronItem: {
				// DisplayName: Soggy Fish Cake
				/* Tooltip:
					'''
					Summons a friendly fishron that flies with you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PetGoldfishItem: {
				// DisplayName: Possessed Fish Idol
				/* Tooltip:
					'''
					Summons a goldfish that follows you
					'You feel like you lost something important in obtaining this idol...'
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PetGolemHeadItem: {
				// DisplayName: Replica Golem Head
				/* Tooltip:
					'''
					Summons a replica Golem head to watch over you
					Shoots bouncing fireballs at nearby enemies
					''' */
			}

			PetHarvesterItem: {
				// DisplayName: Stubborn Bird Soul
				// Tooltip: Summons a stubborn bird to follow you
			}

			PetMoonItem: {
				// DisplayName: Bottled Moon
				/* Tooltip:
					'''
					Summons a small moon that provides you with constant moonlight
					Shows the current moon cycle in the buff tip
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PetPlanteraItem: {
				// DisplayName: Potted Plantera Seed
				/* Tooltip:
					'''
					Summons a Plantera sprout to watch over you
					'It's a mean and green'
					''' */
			}

			PetQueenSlimeItem: {
				// DisplayName: Playful Slimelings
				// Tooltip: Summons a trio of slimelings to follow you
			}

			PetSunItem: {
				// DisplayName: Bottled Sun
				/* Tooltip:
					'''
					Summons a small sun that provides you with constant sunlight
					Shows the current time in the buff tip
					''' */
			}

			PetSunMoonItem: {
				// DisplayName: Bottled Sun and Moon
				/* Tooltip:
					'''
					Summons a small sun and moon that provide you with constant light
					Shows the current time in the buff tip
					Shows the current moon cycle in the buff tip
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PigronataItem: {
				// DisplayName: Pigronata
				/* Tooltip:
					'''
					Summons a friendly pigronata to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			PrinceSlimeItem: {
				// DisplayName: Bottled Prince Slime
				// Tooltip: Summons a prince slime to follow you
			}

			QueenLarvaItem: {
				// DisplayName: Queen Larva
				/* Tooltip:
					'''
					Summons a Queen Bee larva to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			RainbowSlimeItem: {
				// DisplayName: Bottled Rainbow Slime
				// Tooltip: Summons a friendly rainbow slime to follow you
			}

			SkeletronHandItem: {
				// DisplayName: Skeletron's Spare Hand
				/* Tooltip:
					'''
					Summons Skeletron's hand attached to you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			SkeletronPrimeHandItem: {
				// DisplayName: Skeletron Prime's Spare Hand
				/* Tooltip:
					'''
					Summons Skeletron Prime's hand attached to you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			StingSlimeItem: {
				// DisplayName: Bottled Sting Slime
				/* Tooltip:
					'''
					Summons a friendly sting slime to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			StrangeRobotItem: {
				// DisplayName: Odd Mechanical Device
				// Tooltip: Summons a strange robot to follow you
			}

			SuspiciousNuggetItem: {
				// DisplayName: Suspicious Nugget
				// Tooltip: Summons a suspicious nugget to follow you
			}

			SwarmofCthulhuItem: {
				// DisplayName: Bottle of Restless Eyes
				// Tooltip: Summons several eyes to swarm around you
			}

			TinyTwinsItem: {
				// DisplayName: Tiny Twins
				// Tooltip: Summons a tiny pair of The Twins to follow you
			}

			TorchGodLightPetItem: {
				// DisplayName: Godly Torch
				/* Tooltip:
					'''
					Summons a godly torch to follow you
					Automatically places your normal torches with 'Smart Cursor' active
					''' */
			}

			TorturedSoulItem: {
				// DisplayName: Tortured Soul
				// Tooltip: Summons an unfriendly tortured soul to follow you
			}

			TrueObservingEyeItem: {
				// DisplayName: True Observing Eye
				// Tooltip: Summons a True Eye of Cthulhu to watch after you
			}

			TurtleSlimeItem: {
				// DisplayName: Bottled Turtle Slime
				// Tooltip: Summons a friendly turtle slime to follow you
			}

			VampireBatItem: {
				// DisplayName: Fixed Bat Wing
				/* Tooltip:
					'''
					Summons a friendly vampire that flies with you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			WallFragmentItem: {
				// DisplayName: Wall Fragment
				// Tooltip: Summons several fragments of the Wall to follow you
			}

			YoungHarpyItem: {
				// DisplayName: Clump of Down Feathers
				/* Tooltip:
					'''
					Summons a friendly harpy to follow you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			YoungWyvernItem: {
				// DisplayName: Wyverntail
				/* Tooltip:
					'''
					Summons a friendly young wyvern that flies with you
					{$Common.Tooltips.PetHasAltSkins}
					''' */
			}

			WobyItem: {
				// DisplayName: Dog Lover's Badge
				// Tooltip: Summons a loyal canine to follow you
			}

			KingGuppyItem: {
				// DisplayName: High Quality Fish Feed
				// Tooltip: Summons a King Guppy to swim with you
			}

			// KingGuppyItem_AoMM.AttackPattern: Click on falling diamonds to damage nearby enemies

			PetCloudfishItem: {
				// DisplayName: Cloud in a Bowl
				// Tooltip: Summons a pet Cloudfish to follow you
			}

			PetDreadnautilusItem: {
				// DisplayName: Sleeping Nautilus
				// Tooltip: Summons a tiny nautilus to follow you
			}

			ShortfuseCrabItem: {
				// DisplayName: Hollow Bomb
				// Tooltip: Summons a Shortfuse Crab to follow you
			}

			BottledDreams: {
				// DisplayName: Bottled Dreams
				// Tooltip: Allows the holder to double jump
			}

			CrazyBundleOfAssortedBalloons: {
				// DisplayName: Crazy Bundle of Assorted Balloons
				// Tooltip: It's got all kinds of effects
			}

			EverburningCandelabra: {
				// DisplayName: Everburning Candelabra
				// Tooltip: Applies various forms of fire damage to all attacks
			}

			EverburningCandle: {
				// DisplayName: Everburning Candle
				// Tooltip: Applies fire damage to all attacks
			}

			EverburningCursedCandle: {
				// DisplayName: Everburning Cursed Candle
				// Tooltip: Applies cursed fire damage to all attacks
			}

			EverburningShadowflameCandle: {
				// DisplayName: Everburning Shadowflame Candle
				// Tooltip: Applies shadowflame damage to all attacks
			}

			EverfrozenCandle: {
				// DisplayName: Everfrozen Candle
				// Tooltip: Applies frostbite damage to all attacks
			}

			FestiveMirror: {
				// DisplayName: Festive Mirror
				// Tooltip: Provides immunity to {$BuffName.Chilled}, {$BuffName.Frozen}, and {$BuffName.Stoned}
			}

			HarvesterWings: {
				// DisplayName: Harvester Wings
				/* Tooltip:
					'''
					{$CommonItemTooltip.FlightAndSlowfall}
					{$CommonItemTooltip.IncreasesMaxMinionsBy}
					{$CommonItemTooltip.PercentIncreasedSummonDamage@1}
					''' */
			}

			MassiveBundleOfBalloons: {
				// DisplayName: Massive Bundle of Balloons
				/* Tooltip:
					'''
					Allows you to jump six more times
					Negates fall damage and increases jump height
					{$ItemTooltip.HoneyComb}
					''' */
			}

			SigilOfTheBeak: {
				// DisplayName: Sigil of the Beak
				/* Tooltip:
					'''
					Summons fractured souls to seek out enemies in combat
					Frequency and damage increases the lower your health gets
					''' */
			}

			SigilOfTheHarvester: {
				// DisplayName: Sigil of the Harvester
				/* Tooltip:
					'''
					'The aspects of the Harvester reside within you'
					{$Items.SigilOfTheBeak.Tooltip}
					{$Items.SigilOfTheWing.Tooltip}
					{$Items.SigilOfTheTalon.Tooltip@3}
					''' */
			}

			SigilOfTheTalon: {
				// DisplayName: Sigil of the Talon
				/* Tooltip:
					'''
					Allows your grappling hooks to deal damage when extending
					Can hit up to {0} enemies
					''' */
				// HookDamage: Deals {0}% of your last held weapon's damage (currently {1})
			}

			SigilOfTheWing: {
				// DisplayName: Sigil of the Wing
				/* Tooltip:
					'''
					On death, transform into a soul for {0} seconds, regenerating {1}% max health
					While transformed, you cannot use items
					Has a cooldown of {2} minutes
					''' */
				// SocialDesc: Cooldown will go down while in social slot
				// EffectReady: Effect ready
				// ReadyAgainInMinutes: Ready again in {0} {^0:minute;minutes}
				// ReadyAgainInSeconds: Ready again in {0} {^0:second;seconds}
			}

			SlipperySoles: {
				// DisplayName: Slippery Soles
				// Tooltip: You slip and slide on all blocks
			}

			SolesOfFireAndIce: {
				// DisplayName: Soles of Fire and Ice
				// Tooltip: Allows you to walk on water, lava, and thin ice
			}

			StarInABalloon: {
				// DisplayName: Star in a Balloon
				// Tooltip: "{$BuffDescription.StarInBottle} and jump height"
			}

			StarWispBalloon: {
				// DisplayName: Star Wisp Balloon
				/* Tooltip:
					'''
					{$Items.StarInABalloon.Tooltip}
					Glows in the dark
					''' */
			}

			WispInABalloon: {
				// DisplayName: Wisp in a Balloon
				// Tooltip: Glows in the dark and increases jump height
			}

			AntiqueKey: {
				// DisplayName: Antique Key
				// Tooltip: "'An old key that looks to fit the lock on the nearby cage...'"
			}

			SoulSaviorHeaddress: {
				// DisplayName: Soul Savior Headdress
				/* Tooltip:
					'''
					{$CommonItemTooltip.PercentIncreasedSummonDamage}
					{$CommonItemTooltip.IncreasesMaxMinionsBy@1}
					''' */
				/* SetBonus:
					'''
					Reflects {0}% contact damage per available minion slot
					Reflected damage further increased by effects that increase summon damage
					Current reflected damage: {1}%
					Minions summoned by the {$Items.EverhallowedLantern.DisplayName} become 'empowered' and gain {2}% more damage
					''' */
			}

			SoulSaviorPlate: {
				// DisplayName: Soul Savior Breastplate
				/* Tooltip:
					'''
					{$CommonItemTooltip.PercentIncreasedSummonDamage}
					{$CommonItemTooltip.IncreasesMaxMinionsBy@1}
					''' */
			}

			SoulSaviorRobe: {
				// DisplayName: Soul Savior Robe
				/* Tooltip:
					'''
					{$CommonItemTooltip.PercentIncreasedSummonDamage}
					{$CommonItemTooltip.IncreasesMaxMinionsBy@1}
					''' */
			}

			CaughtDungeonSoul: {
				// DisplayName: Loose Dungeon Soul
				/* Tooltip:
					'''
					'An inert soul caught by a net'
					Awakened in your inventory when {$NPCs.HarvesterBoss.DisplayName} is defeated
					''' */
				// SpawnSoul: Use it to spawn a soul for the {$NPCs.HarvesterBoss.DisplayName} to eat
			}

			CaughtDungeonSoulFreed: {
				// DisplayName: Freed Dungeon Soul
				// Tooltip: Awakened by defeating the {$NPCs.HarvesterBoss.DisplayName}
			}

			ChunkysEyeItem: {
				// DisplayName: Chunky's Eye
				// Tooltip: "'Find {$Items.MeatballsEyeItem.DisplayName} and combine the two at a Demon Altar'"
			}

			CuteSlimeSpawnEnableFlask: {
				// DisplayName: Jellied Ale
				// SeeMoreOften: You will see Cute Slimes more often for a short time
				// See: Allows you to see Cute Slimes for a short time
			}

			EmpowermentFlask: {
				// DisplayName: Empowerment Flask
				/* Tooltip:
					'''
					Incrementally increases damage dealt over time
					Bonus resets upon taking damage
					(Summon damage only increases marginally)
					''' */
			}

			EnhancedHunterPotion: {
				// DisplayName: Enhanced Hunter Potion
				/* Tooltip:
					'''
					{$ItemTooltip.HunterPotion}
					Additionally, shows the location of enemies outside your vision range
					Range is roughly one screen in each direction
					''' */
			}

			HarvesterTreasureBag: {
				// DisplayName: Treasure Bag ({$NPCs.HarvesterBoss.DisplayName})
				// Tooltip: "{$CommonItemTooltip.RightClickToOpen}"
			}

			DesiccatedLeather: {
				// DisplayName: Desiccated Leather
				// Tooltip: "'It's dry, sticky, and smells horrible'"
			}

			DroneParts: {
				// DisplayName: Drone Parts
				// Tooltip: "'These parts could be repurposed...'"
			}

			// DroneUnlockableBasicLaserDrone.DisplayName: Basic Laser Drone Components
			// DroneUnlockableHealingDrone.DisplayName: Healing Drone Components
			// DroneUnlockableHeavyLaserDrone.DisplayName: Heavy Laser Drone Components
			// DroneUnlockableMissileDrone.DisplayName: Missile Drone Components
			// DroneUnlockableShieldDrone.DisplayName: Shield Drone Components

			DroneUnlockable: {
				// UnlockedText: Unlocked: {0}
				// Unlocks: Unlocks the {0} for the {$Items.DroneController.DisplayName}
				// AlreadyUnlocked: Already unlocked {0} for the {$Items.DroneController.DisplayName}
			}

			CraftOfMiners: {
				// DisplayName: Craft of Miners
				/* Tooltip:
					'''
					'Use those fists of yours to tear through any blocks in your way'
					[c/44942e:'Dedicated to Anonymous']
					''' */
			}

			GuideVoodoorang: {
				// DisplayName: Guide Voodoorang
				// Tooltip: "'Why are you like this?'"
			}

			InfinityRocket: {
				// DisplayName: Infinity Rocket
				// Tooltip: "'It seriously never ends!'"
			}

			StarForge: {
				// DisplayName: Star Forge
				// Tooltip: "'An endless supply of the cosmos'"
			}

			// BrainOfCthulhuGitgud.DisplayName: Insanity-B-Gone
			// DeerclopsGitgud.DisplayName: Deerclops Effigy
			// DestroyerGitgud.DisplayName: Metal Dreamcatcher
			// DukeFishronGitgud.DisplayName: White Hook
			// EaterOfWorldsGitgud.DisplayName: Toy Seagull
			// EmpressOfLightGitgud.DisplayName: Well-Worn Boots of Stomping
			// EyeOfCthulhuGitgud.DisplayName: Broken Lens
			// GolemGitgud.DisplayName: Rechargeable Solar Battery
			// KingSlimeGitgud.DisplayName: Slime Inquisition Notice
			// LunaticCultistGitgud.DisplayName: Notice of Occupational Termination
			// MoonLordGitgud.DisplayName: Bright Side of the Moon
			// PlanteraGitgud.DisplayName: Green Thumb
			// QueenBeeGitgud.DisplayName: Honey Thimble
			// QueenSlimeGitgud.DisplayName: Sparkling Cupcake
			// SkeletronGitgud.DisplayName: Carton of Soy Milk
			// SkeletronPrimeGitgud.DisplayName: Clock Set Ten Years Ahead
			// TwinsGitgud.DisplayName: Metal Contact Lens
			// WallOfFleshGitgud.DisplayName: Wall of Flesh Voodoo Doll

			IdolOfDecay: {
				// DisplayName: Idol Of Decay
				/* Tooltip:
					'''
					Summons {$NPCs.HarvesterBoss.DisplayName}'s final form in the dungeon
					Unlimited uses!
					''' */
			}

			KnittingSet: {
				// DisplayName: Knitting Set
				// Tooltip: "'A set of tools used in crafting cute clothing and accessories'"
			}

			MeatballsEyeItem: {
				// DisplayName: Meatball's Eye
				// Tooltip: "'Find {$Items.ChunkysEyeItem.DisplayName} and combine the two at a Demon Altar'"
			}

			PetAccessory: {
				// Hat: Worn on the head
				// Body: Worn on the body
				// Carried: Carried
				// Accessory: Worn as an accessory
				// None: None
				// Blacklisted: This accessory type is disabled for your particular slime
				// NoUse: You have no summoned slime to equip this on
				// Disabled: This accessory type is not registered for use by the devs

				Colors: {
					// Red: Red
					// Orange: Orange
					// Gold: Gold
					// Yellow: Yellow
					// Green: Green
					// Blue: Blue
					// Purple: Purple
					// Pink: Pink
					// White: White
					// Gray: Gray
					// Black: Black
					// Platinum: Platinum
					// Iron: Iron
				}
			}

			PetAccessoryBowtie: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A soft bowtie for your cute slime to wear on her chest'"
				// ShortName: Bowtie

				AccessoryNames: {
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Orange: "{$Items.PetAccessory.Colors.Orange}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// White: "{$Items.PetAccessory.Colors.White}"
					// Gray: "{$Items.PetAccessory.Colors.Gray}"
					// Black: "{$Items.PetAccessory.Colors.Black}"
				}
			}

			PetAccessoryBunnyEars: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A pair of Easter bunny ears for your cute slime to wear on her head'"
				// ShortName: Bunny Ears
			}

			PetAccessoryBunnySuit: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A bunny(?) costume for your cute slime to wear on her chest'"
				// ShortName: Bunny Suit

				AccessoryNames: {
					// Black: "{$Items.PetAccessory.Colors.Black}"
					// Orange: "{$Items.PetAccessory.Colors.Orange}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// White: "{$Items.PetAccessory.Colors.White}"
					// Gray: "{$Items.PetAccessory.Colors.Gray}"
					// Red: "{$Items.PetAccessory.Colors.Red}"
				}
			}

			PetAccessoryCrown: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A regal crown for your cute slime to wear on her head'"
				// ShortName: Crown

				AccessoryNames: {
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Platinum: "{$Items.PetAccessory.Colors.Platinum}"
				}
			}

			PetAccessoryHairBow: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A large bow for your cute slime to wear on her head'"
				// ShortName: Hair Bow

				AccessoryNames: {
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Orange: "{$Items.PetAccessory.Colors.Orange}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// White: "{$Items.PetAccessory.Colors.White}"
					// Gray: "{$Items.PetAccessory.Colors.Gray}"
					// Black: "{$Items.PetAccessory.Colors.Black}"
				}
			}

			PetAccessoryKitchenKnife: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush kitchen knife for your cute slime to carry'"
				// ShortName: Kitchen Knife

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryMetalHelmet: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush knight's helmet for your cute slime to wear on her head'"
				// ShortName: Knight's Helmet

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryMittens: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'Warm mittens for your cute slime's hands'"
				// ShortName: Mittens

				AccessoryNames: {
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Orange: "{$Items.PetAccessory.Colors.Orange}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// White: "{$Items.PetAccessory.Colors.White}"
					// Gray: "{$Items.PetAccessory.Colors.Gray}"
					// Black: "{$Items.PetAccessory.Colors.Black}"
				}
			}

			PetAccessoryPartyHat: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A party hat for your cute slime to wear on her head'"
				// ShortName: Party Hat
			}

			PetAccessoryPumpkinMask: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A perfectly-sized pumpkin for your cute slime to wear on her head'"
				// ShortName: Pumpkin Mask

				AccessoryNames: {
					// SOrange: Sinister Orange
					// IOrange: Innocent Orange
					// SGreen: Sinister Green
					// IGreen: Innocent Green
					// SWhite: Sinister White
					// IWhite: Innocent White
					// SPurple: Sinister Purple
					// IPurple: Innocent Purple
					// SMelon: Sinister Melon
					// IMelon: Innocent Melon
				}
			}

			PetAccessorySlimeHead: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A slime plush that sits on your cute slime's head'"
				// ShortName: Head Slime

				AccessoryNames: {
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// Pinky: Pinky
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Black: "{$Items.PetAccessory.Colors.Black}"
				}
			}

			PetAccessoryStaff: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush staff for your cute slime to carry'"
				// ShortName: Staff

				AccessoryNames: {
					// Amethyst: Amethyst
					// Sapphire: Sapphire
					// Emerald: Emerald
					// Ruby: Ruby
					// Amber: Amber
					// Topaz: Topaz
					// Diamond: Diamond
					// Magic: Magic
				}
			}

			PetAccessorySwallowedKey: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush key for your cute slime to...carry?'"
				// ShortName: Swallowed Key
			}

			PetAccessoryTophat: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A classy top hat for your cute slime to wear on her head'"
				// ShortName: Top Hat
			}

			PetAccessoryToyBreastplate: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush knight's breastplate for your cute slime to wear on her body'"
				// ShortName: Knight's Breastplate

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryToyMace: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush paladin's mace for your cute slime to carry'"
				// ShortName: Paladin's Mace

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryToyShield: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush knight's shield for your cute slime to carry'"
				// ShortName: Knight's Shield

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryToySpear: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush warrior's spear for your cute slime to carry'"
				// ShortName: Spartan's Spear

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryToySword: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A plush knight's sword for your cute slime to carry'"
				// ShortName: Knight's Sword

				AccessoryNames: {
					// Iron: "{$Items.PetAccessory.Colors.Iron}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
				}
			}

			PetAccessoryWizardHat: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A brown wizard's hat for your cute slime to wear on her head'"
				// ShortName: Wizard Hat
			}

			PetAccessoryXmasHat: {
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A festive hat for your cute slime to wear on her head'"
				// ShortName: Santa Hat

				AccessoryNames: {
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
				}
			}

			PetAccessoryDress: {
				AccessoryNames: {
					// Red: "{$Items.PetAccessory.Colors.Red}"
					// Orange: "{$Items.PetAccessory.Colors.Orange}"
					// Gold: "{$Items.PetAccessory.Colors.Gold}"
					// Yellow: "{$Items.PetAccessory.Colors.Yellow}"
					// Green: "{$Items.PetAccessory.Colors.Green}"
					// Blue: "{$Items.PetAccessory.Colors.Blue}"
					// Purple: "{$Items.PetAccessory.Colors.Purple}"
					// Pink: "{$Items.PetAccessory.Colors.Pink}"
					// White: "{$Items.PetAccessory.Colors.White}"
					// Gray: "{$Items.PetAccessory.Colors.Gray}"
					// Black: "{$Items.PetAccessory.Colors.Black}"
				}

				// ShortName: Dress
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'An elegant dress for your cute slime to wear on her body'"
			}

			PetAccessoryGlasses: {
				// ShortName: Glasses
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A slick pair of glasses for your cute slime to wear on her head'"
			}

			PetAccessorySkullMask: {
				// ShortName: Skull Mask
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A mask for your cute slime to wear on her head'"
			}

			PetAccessoryTikiMask: {
				// ShortName: Tiki Mask
				// DisplayName: Cute {$ShortName}
				// Tooltip: "'A mask for your cute slime to wear on her head'"
			}

			AntiqueCageItem: {
				// DisplayName: Antique Cage
				// Tooltip: ""
			}

			AntiqueChestItem: {
				// DisplayName: Antique Chest
				// Tooltip: ""
			}

			CuteSlimeStatueItem: {
				// DisplayName: Cute Slime Statue
				// Tooltip: You can't catch statue spawned creatures
			}

			HarvesterRelicItem: {
				// DisplayName: "{$NPCs.HarvesterBoss.DisplayName} Relic"
				// Tooltip: ""
			}

			HarvesterRelicColoredItem: {
				// DisplayName: "{$Items.HarvesterRelicItem.DisplayName} (Colored)"
				// Tooltip: ""
			}

			HarvesterTrophyItem: {
				// DisplayName: "{$NPCs.HarvesterBoss.DisplayName} Trophy"
				// Tooltip: ""
			}

			FieldsOfJoyItem: {
				// DisplayName: Fields of Joy
				// Tooltip: "'C. Paigner'"
			}

			PretentiousRockItem: {
				// DisplayName: A Study of Slate
				// Tooltip: "'C. Paigner'"
			}

			SCP099Item: {
				// DisplayName: The Portrait
				// Tooltip: "'R. Magritte'"
			}

			SCP3515Item: {
				// DisplayName: SCP-3515
				// Tooltip: "'Unknown'"
			}

			SlimeBeaconItem: {
				// DisplayName: Slime Beacon
				// Tooltip: "'Do The Slime With Me!'"
				// NoMultiplayer: "[c/FFA01D:DOES NOT WORK IN MULTIPLAYER]"
			}

			StarRodItem: {
				// DisplayName: Star Rod
				// Tooltip: Attracts Falling Stars at night if you are nearby
			}

			// VanityDresserItem.DisplayName: Costume Dresser

			WyvernCampfireItem: {
				// DisplayName: Wyvern Campfire
				// Tooltip: "'Makes Wyverns go poof!'"
			}

			ExtendoNetGolden: {
				// DisplayName: Golden Extendo-Net
				/* Tooltip:
					'''
					'Catches those REALLY hard to reach critters'
					Can catch lava critters too!
					''' */
			}

			ExtendoNetRegular: {
				// DisplayName: Extendo-Net
				// Tooltip: "'Catches those hard to reach critters'"
			}

			PrettyMask: {
				// DisplayName: Pretty Mask
				// Tooltip: "'Goes well with a red scarf, red gloves, red boots, and your birthday suit'"
			}

			SoulHarvesterMask: {
				// DisplayName: "{$NPCs.HarvesterBoss.DisplayName} Mask"
				// Tooltip: ""
			}

			VanitySelector: {
				// DisplayName: Costume Suitcase
				/* Tooltip:
					'''
					Left Click to change your Pet's appearance
					Right Click to change your Light Pet's appearance
					''' */
			}

			BoneCleavingFang: {
				// DisplayName: Bone-Cleaving Fang
				/* Tooltip:
					'''
					Striking enemies will charge the sword, causing it to glow with power
					Release the built up power by right-clicking. The brighter the sword, the greater the power
					The sword's power fades when not used
					''' */
			}

			BoneShatterLongbow: {
				// DisplayName: Bone-Shatter Longbow
				// Tooltip: Wooden arrows ignite into burning souls
			}

			BreathOfSpazmatism: {
				// DisplayName: Breath of Spazmatism
				/* Tooltip:
					'''
					Uses gel to fire a stream of cursed flames
					Ignores 15 points of enemy Defense
					''' */
			}

			DroneController: {
				// DisplayName: Drone Controller
				/* Tooltip:
					'''
					Summons a friendly Drone to support or fight for you
					Right click to pick from available drones
					Holding the item improves the Drones' supportive and offensive abilities
					''' */
				// Firerate: "{0} firerate"
				// UnlockMore: Defeat {$NPCName.TheDestroyer} to unlock more drones
				// CanSpawn: Only one {0} can be out at once
				// ToUnlock: Craft and use a '{0}' Item
			}

			EverglowLantern: {
				// DisplayName: Everglow Lantern
				/* Tooltip:
					'''
					Summons two freed Dungeon Souls at a time to fight for you
					Each Dungeon Soul occupies only half a minion slot
					''' */
			}

			EverhallowedLantern: {
				// DisplayName: Everhallowed Lantern
				/* Tooltip:
					'''
					Summons a Soul to fight for you
					Right click to pick from available forms
					''' */
				// MechCondition: Defeat mechanical bosses to unlock new minions
				// SetBonusBoost: "{0}% damage increase from wearing the 'Soul Savior' Set"
			}

			EagerUnderlingItem: {
				// DisplayName: Satchel of Goodies
				// Tooltip: Summons an eager underling to fight for you
				// Flavor: "'Inside, there's a spiky ball, a coin, and a... moon?'"
			}

			ShyUnderlingItem: {
				// DisplayName: Dented Coin
				// Tooltip: Summons a shy underling to fight for you
				// Flavor: "'This coin has been used as target practice for a long time'"
			}

			SeriousUnderlingItem: {
				// DisplayName: Well-Loved Doll
				// Tooltip: Summons a serious underling to fight for you
				// Flavor: "'A simple voodoo doll made of loose straw and hay.'"
			}

			LegendaryWoodenSword: {
				// DisplayName: Legendary Wooden Sword
				// Tooltip: ""
			}

			MagicSlimeSling: {
				// DisplayName: Magic Slime Sling
				// Tooltip: Shoots magic gel that turns into slime minions on hit
			}

			PlagueOfToads: {
				// DisplayName: Plague of Toads
				// Tooltip: Summons a cloud to rain toads on your foes
			}

			PocketSand: {
				// DisplayName: Pocket Sand
				// Tooltip: "'Throw a clump of sand at an enemy to confuse it'"
			}

			SightofRetinazer: {
				// DisplayName: Sight of Retinazer
				// Tooltip: ""
			}

			SlimeHandlerKnapsack: {
				// DisplayName: Slime Handler Knapsack
				/* Tooltip:
					'''
					Summons a friendly Slime of a random color from your Knapsack to fight for you
					Right click to pick from available forms
					''' */
				// Default: Default
				// Assorted: Assorted
				// Spiked: Spiked
				// SpikedBonus: Shoots spikes while fighting
				// SpikedUnlock: Defeat Plantera
				/* TooltipFormat:
					'''
					{0}
					{1}
					{2}
					{3}
					''' */
			}

			Talonstorm: {
				// DisplayName: Talonstorm
				// Tooltip: Summons a bone storm that attacks enemies with extending talons
			}

			TomeOfShadowflameSkulls: {
				// DisplayName: Tome of Shadowflame Skulls
				// Tooltip: Inflicts Shadowflame on enemies
			}

			TrueLegendaryWoodenSword: {
				// DisplayName: True Legendary Wooden Sword
				// Tooltip: "'Truly Legendary'"
			}

			Gitgud: {
				// Or: or
				// ConsolationPrize: Consolation Prize
				// ReducedDamageTakenBoss: "{0}% reduced damage taken from {1}"
				// BuffImmunity: Immunity to '{0}' while {1} {^2:is;are} alive
				// TimesDied: Times died: {0}/{1}
				// DeleteFromInventory: You won't be needing the {0} anymore...
			}

			SillyBalloonKit: {
				// DisplayName: Silly Balloon Kit
				/* Tooltip:
					'''
					'A great gift for parties, birthdays, and saving the world!'
					Inflate a fun party balloon to carry around
					Left click to pick a different balloon
					''' */
				// DemonEyeGreen: Demon Eye (Green)
				// DemonEyePurple: Demon Eye (Purple)
				// DemonEyeRed: Demon Eye (Red)
				// FracturedEyeGreen: Fractured Eye (Green)
				// FracturedEyePurple: Fractured Eye (Purple)
				// FracturedEyeRed: Fractured Eye (Red)
				// MetalEyeGreen: Metal Eye (Green)
				// MetalEyePurple: Metal Eye (Purple)
				// MetalEyeRed: Metal Eye (Red)
				// FracturedMetalEyeGreen: Fractured Metal Eye (Green)
				// FracturedMetalEyePurple: Fractured Metal Eye (Purple)
				// FracturedMetalEyeRed: Fractured Metal Eye (Red)
				// Spazmatism: Spazmatism
				// Retinazer: Retinazer
				// Cobballoon: Cobballoon
			}

			UnloadedItem: {
				// AommDisabled: "'The Amulet Of Many Minions' mod is not enabled"
				// DisabledByConfig: Disabled by the '{0}' config setting
			}
		}

		NPCs: {
			AnimatedSpellTome: {
				// DisplayName: Animated Spell Tome
				// BestiaryFlavorText: Master wizards need not look for a specific tome; it will find them when needed.
			}

			AnimatedTome: {
				// DisplayName: Animated Tome
				// BestiaryFlavorText: In the past, this book was a best seller; it practically flew from the shelves!
			}

			Bass: {
				// DisplayName: Bass
				// BestiaryFlavorText: A simple fish commonly found in calm freshwater rivers and lakes.
			}

			BloatedBaitThief: {
				// DisplayName: Bloated Bait Thief
				// BestiaryFlavorText: An engorged bass with a bloated belly. Something is wriggling inside...
			}

			Chunky: {
				// DisplayName: Chunky
				// BestiaryFlavorText: A mass of rotten flesh with a single eye. It seems as though the eye and the mass do not get along.
			}

			ChunkysEye: {
				// DisplayName: Chunky's Eye
				// BestiaryFlavorText: A minion of Cthulhu that was trapped in the Corruption. It now seeks its lost little brother.
			}

			Cloudfish: {
				// DisplayName: Cloudfish
				// BestiaryFlavorText: Is it a cloud? Is it a fish? It's both!
			}

			CuteGastropod: {
				// DisplayName: Cute Gastropod
				// BestiaryFlavorText: This hallowed variant of slime has taken on a more friendly appearance after meeting a special person.
			}

			CuteSlimeBlack: {
				// DisplayName: Cute Black Slime
				// BestiaryFlavorText: Harboring great vanity for its ponytail, the easiest way to befriend it is to compliment the hair.
			}

			CuteSlimeBlue: {
				// DisplayName: Cute Blue Slime
				// BestiaryFlavorText: Though its expression is dull, this slime is very affectionate and loves to hug anyone that it gets close to.
			}

			CuteSlimeCorrupt: {
				// DisplayName: Cute Corrupt Slime
				// BestiaryFlavorText: Hollow eyes and a dark color makes you think this slime is dangerous, but it's just not very social.
			}

			CuteSlimeCorruptJungle: {
				// DisplayName: Cute Corrupt Jungle Slime
				// BestiaryFlavorText: Slimes are incredibly adaptable, being able to survive even the harshest conditions.
			}

			CuteSlimeCrimson: {
				// DisplayName: Cute Crimson Slime
				// BestiaryFlavorText: Though it looks like it has an unstable mind, this slime is incredibly calm and collected.
			}

			CuteSlimeCrimsonJungle: {
				// DisplayName: Cute Crimson Jungle Slime
				// BestiaryFlavorText: When the jungle turned red, this slime adapted quickly by mimicking the crimson grass.
			}

			CuteSlimeDungeon: {
				// DisplayName: Cute Dungeon Slime
				// BestiaryFlavorText: This slime was created in the image of an ancient sorceress. Other than the lack of legs, it's almost perfect.
			}

			// CuteSlimeGolden.DisplayName: Cute Golden Slime

			CuteSlimeGreen: {
				// DisplayName: Cute Green Slime
				// BestiaryFlavorText: Don't let the closed eyes fool you; this slime is attentive and ready to act at a moment's notice.
			}

			CuteSlimeHoney: {
				// DisplayName: Cute Honey Slime
				// BestiaryFlavorText: To hide from the hornets, this slime coated itself in honey. It only made the hornets more aware.
			}

			CuteSlimeIce: {
				// DisplayName: Cute Ice Slime
				// BestiaryFlavorText: Its body may be cold to the touch, but its expression and mannerisms will warm your heart.
			}

			CuteSlimeIlluminant: {
				// DisplayName: Cute Illuminant Slime
				// BestiaryFlavorText: The erratic nature of the Hallow has made this slime quite playful.
			}

			CuteSlimeJungle: {
				// DisplayName: Cute Jungle Slime
				// BestiaryFlavorText: Life in the jungle is hard for soft-bodied visitors, but this slime proves it's not impossible.
			}

			CuteSlimeLava: {
				// DisplayName: Cute Lava Slime
				// BestiaryFlavorText: Having accidentally gotten impaled by a chunk of obsidian, this slime laments being unable to remove it.
			}

			CuteSlimePink: {
				// DisplayName: Cute Pink Slime
				// BestiaryFlavorText: Dimminutive does not mean lacking. Despite its size, this slime has more spunk than an entire party.
			}

			CuteSlimePinkIce: {
				// DisplayName: Cute Pink Ice Slime
				// BestiaryFlavorText: The hallow may have chaotic effects on the wildlife, but this slime remains calm and polite.
			}

			CuteSlimePurple: {
				// DisplayName: Cute Purple Slime
				// BestiaryFlavorText: Don't let the smile fool you; it's actually much happier than it looks.
			}

			CuteSlimePurpleIce: {
				// DisplayName: Cute Purple Ice Slime
				// BestiaryFlavorText: Frightened by the corruption, this slime is perpetually nervous.
			}

			CuteSlimeRainbow: {
				// DisplayName: Cute Rainbow Slime
				// BestiaryFlavorText: The caring and motherly nature that this slime exhibits shows that it understands compassion.
			}

			CuteSlimeRed: {
				// DisplayName: Cute Red Slime
				// BestiaryFlavorText: A playful slime that is quite active. It sometimes goes overboard when having fun.
			}

			CuteSlimeRedIce: {
				// DisplayName: Cute Red Ice Slime
				// BestiaryFlavorText: It is best to avoid standing out when in the Crimson, and this slime knows that all too well.
			}

			CuteSlimeSand: {
				// DisplayName: Cute Sand Slime
				// BestiaryFlavorText: The coarse sand that coats its body leads it to keep its distance, but it won't turn down a friend.
			}

			CuteSlimeShimmer: {
				// DisplayName: Cute Shimmer Slime
				// BestiaryFlavorText: When exposed to the mysterious shimmer, this slime took on an aetherial appearance.
			}

			CuteSlimeToxic: {
				// DisplayName: Cute Toxic Slime
				// BestiaryFlavorText: Appearances are deceiving; it's only half as monstrous as it looks!
			}

			CuteSlimeXmas: {
				// DisplayName: Cute Christmas Slime
				// BestiaryFlavorText: The greatest gift is a friend. This slime wants to bring that gift to everyone.
			}

			CuteSlimeYellow: {
				// DisplayName: Cute Yellow Slime
				// BestiaryFlavorText: Moving with delicate grace, this slime dances about without missing a step.
			}

			// DemonEyeRecolor.DisplayName: Demon Eye
			// DemonEyeWandering.DisplayName: Wandering Eye

			FairySlime: {
				// DisplayName: Fairy Slime
				// BestiaryFlavorText: Not wanting to lose to its flying neighbors, it has grown wing-like extentions. It can't fly, but it's happy regardless of this fact.
			}

			GiantGrasshopper: {
				// DisplayName: Giant Grasshopper
				// BestiaryFlavorText: It can leap over entire bushes in a single bound.
			}

			GiantGrasshopperGold: {
				// DisplayName: Gold Giant Grasshopper
				// BestiaryFlavorText: "{$CommonBestiaryFlavor.GoldCritter}"
			}

			// DungeonSoul.DisplayName: Dungeon Soul
			// DungeonSoulFreed.DisplayName: "{$NPCs.DungeonSoul.DisplayName}"

			HarvesterBoss: {
				// DisplayName: Soul Harvester
				// BestiaryFlavorText: After having absorbed the essence of fallen dungeon denizens, this skeletal bird rapidly grew into a ferocious hunter that sought to eat the hand that once fed it.
				// BossChecklistIntegration.SpawnInfo: Find and open an {$Items.AntiqueCageItem.DisplayName} in the dungeon, or use [i:AssortedCrazyThings/IdolOfDecay]
			}

			// HarvesterTalonLeft.DisplayName: "{$NPCs.HarvesterBoss.DisplayName}"
			// HarvesterTalonRight.DisplayName: "{$NPCs.HarvesterBoss.DisplayName}"

			HornedSlime: {
				// DisplayName: Horned Slime
				// BestiaryFlavorText: The horns aren't just for decoration; they are capable of dispersing heat, allowing the slime to remain gelatinous.
			}

			JoyousSlime: {
				// DisplayName: Joyous Slime
				// BestiaryFlavorText: A passive variant of slime with a friendly face. At night, it tries to be close to an equally friendly face.
			}

			Meatball: {
				// DisplayName: Meatball
				// BestiaryFlavorText: A mass of bloody flesh with a single eye. The eye appears to be struggling in an attempt to escape.
			}

			MeatballsEye: {
				// DisplayName: Meatball's Eye
				// BestiaryFlavorText: A minion of Cthulhu that was trapped in the Crimson. It hastily seeks out its older brother.
			}

			Megalodon: {
				// DisplayName: Megalodon
				// BestiaryFlavorText: Thought to be extinct, this ancient predator is as long-lived as its endless hunger.
			}

			OceanSlime: {
				// DisplayName: Ocean Slime
				// BestiaryFlavorText: Slimes that are lost to the sea are faced with two options; adapt, or be eaten. Luckily, these slimes taste bad.
			}

			SpawnOfOcram: {
				// DisplayName: Spawn of Ocram
				// BestiaryFlavorText: An ancient being's offspring, once thought to have been lost to time.
			}

			StingSlime: {
				// DisplayName: Sting Slime
				// BestiaryFlavorText: Bounce like a slime, sting like a scorpion.
			}

			StoneSoldier: {
				// DisplayName: Stone Soldier
				// BestiaryFlavorText: Animate stone statues that have wandered from an ancient tomb. Their eyes are valuable.
			}

			StrangeSlime: {
				// DisplayName: Strange Slime
				// BestiaryFlavorText: These peculiar slimes are host to strange plants, which grow for life. The slime always makes sure to keep it upright.
			}

			TurtleSlime: {
				// DisplayName: Turtle Slime
				// BestiaryFlavorText: Giant tortoises are known to shed part of their shell as they grow. These slimes collect those old fragments for protection.
			}

			WalkingTombstoneGolden: {
				// DisplayName: Walking Tombstone
				// BestiaryFlavorText: Terrestrial crabs that have taken up a morbid and expensive form of camouflage.
			}

			YoungHarpy: {
				// DisplayName: Young Harpy
				// BestiaryFlavorText: Harpies are not inherently hostile. If they make a childhood friend, they'll always be friends.
			}

			ShortfuseCrab: {
				// DisplayName: Shortfuse Crab
				// BestiaryFlavorText: The bomb on its back may be defused, but you probably shouldn't let it go near fire anyway.
			}

			CuteSlimes: {
				SpawnConditionType: {
					Forest: {
						// Black: Black
						// Blue: Blue
						// Green: Green
						// Purple: Purple
						// Rainbow: Rainbow
						// Red: Red
						// Yellow: Yellow
					}

					// Desert.Sand: Sand
					// Tundra.Ice: Ice
					// Jungle.Jungle: Jungle
					// Underground.Toxic: Toxic
					// Hell.Lava: Lava
					// Corruption.Corrupt: Corrupt
					// CorruptionIce.PurpleIce: Purple Ice
					// CorruptionJungle.CorruptJungle: Corrupt Jungle
					// Crimson.Crimson: Crimson
					// CrimsonIce.RedIce: Red Ice
					// CrimsonJungle.CrimsonJungle: Crimson Jungle
					// Hallow.Illuminant: Illuminant
					// HallowIce.PinkIce: Pink Ice
					// Dungeon.Dungeon: Dungeon
					// Xmas.Xmas: Xmas
					// Honey.Honey: Honey
				}
			}

			ChloroSlime: {
				// DisplayName: Chloro Slime
				// BestiaryFlavorText: ""
			}

			MudSlime: {
				// DisplayName: Mud Slime
				// BestiaryFlavorText: ""
			}
		}

		Projectiles: {
			// SigilOfTheBeakProj.DisplayName: Fractured Soul
			// CompanionDungeonSoulMinion.DisplayName: Companion Soul
			// BasicLaserDrone.DisplayName: Basic Laser Drone
			// HealingDrone.DisplayName: Healing Drone
			// HeavyLaserDrone.DisplayName: Heavy Laser Drone
			// HeavyLaserDroneLaser.DisplayName: Laser Drone Laser
			// MissileDrone.DisplayName: Missile Drone
			// MissileDroneRocket.DisplayName: Missile Drone Rocket
			// ShieldDrone.DisplayName: Shield Drone
			// GoblinUnderlingWeaponDart.DisplayName: Goblin Underling Dart
			// EagerUnderlingProj.DisplayName: "{$Buffs.EagerUnderlingBuff.DisplayName}"
			// ShyUnderlingProj.DisplayName: "{$Buffs.ShyUnderlingBuff.DisplayName}"
			// SeriousUnderlingProj.DisplayName: "{$Buffs.SeriousUnderlingBuff.DisplayName}"
			// GoblinUnderlingWeaponTerraBeam.DisplayName: Goblin Underling Terra Beam
			// GoblinUnderlingWeaponArrow.DisplayName: Goblin Underling Arrow
			// GoblinUnderlingWeaponBlaster.DisplayName: Goblin Underling Blaster
			// GoblinUnderlingWeaponOrb.DisplayName: Goblin Underling Orb
			// GoblinUnderlingWeaponDaybreak.DisplayName: Goblin Underling Daybreak
			// GoblinUnderlingWeaponDaybreakExplosion.DisplayName: "{$Projectiles.GoblinUnderlingWeaponDaybreak.DisplayName}"
			// MagicSlimeSlingFired.DisplayName: Magic Slime Sling
			// MagicSlimeSlingMinion.DisplayName: Magic Slime Sling Minion
			// PetDestroyerDroneLaser.DisplayName: Pet Destroyer Laser
			// PetGolemHeadFireball.DisplayName: Pet Golem Head Fireball
			// SlimePackAssortedMinion.DisplayName: Slime Knapsack Minion
			// SlimePackMinion.DisplayName: Slime Knapsack Minion
			// SlimePackMinionSpike.DisplayName: Slime Knapsack Minion Spike
			// SlimePackSpikedMinion.DisplayName: Slime Knapsack Minion
			// BabyHarvesterProj.DisplayName: Baby Bird
			// HarvesterAbsorbedSoul.DisplayName: Absorbed Soul
			// HarvesterBone.DisplayName: Harvester Bone
			// HarvesterFracturedSoul.DisplayName: Fractured Soul

			AbeeminationProj: {
				// DisplayName: Abeemination
				// Default.Tooltip: Default
				// SnowBee.Tooltip: Snow Bee
				// OilSpill.Tooltip: Oil Spill
				// MissingIngredients.Tooltip: Missing Ingredients
			}

			// AlienHornetProj.DisplayName: Alien Hornet

			AnimatedTomeProj: {
				// DisplayName: Animated Tome
				// Green.Tooltip: Green
				// Blue.Tooltip: Blue
				// Purple.Tooltip: Purple
				// Pink.Tooltip: Pink
				// Yellow.Tooltip: Yellow
				// Spell.Tooltip: Spell
			}

			AnomalocarisProj: {
				// DisplayName: Anomalocaris
				// Wild.Tooltip: Wild
				// Shrimpy.Tooltip: Shrimpy
				// Snippy.Tooltip: Snippy
			}

			// BabyCrimeraProj.DisplayName: Baby Crimera
			// BabyIchorStickerProj.DisplayName: Baby Ichor Sticker
			// BabyOcramProj.DisplayName: Baby Ocram
			// BrainofConfusionProj.DisplayName: Brain of Confusion
			// ChunkyProj.DisplayName: Chunky
			// ChunkySlimeProj.DisplayName: Chunky Slime
			// CompanionDungeonSoulPetProj.DisplayName: Companion Soul
			// CompanionDungeonSoulPetProj2.DisplayName: Companion Soul

			CursedSkullProj: {
				// DisplayName: Cursed Skull
				// Default.Tooltip: Default
				// Dragon.Tooltip: Dragon
			}

			// CuteGastropodProj.DisplayName: Cute Gastropod

			CuteLamiaPetProj: {
				// DisplayName: Small Snake
				// Dark.Tooltip: Dark
				// Light.Tooltip: Light
				// Dropkick.Tooltip: Dropkick
			}

			// CuteSlimeBlackProj.DisplayName: Cute Black Slime
			// CuteSlimeBlueProj.DisplayName: Cute Blue Slime
			// CuteSlimeCorruptProj.DisplayName: Cute Corrupt Slime
			// CuteSlimeCorruptJungleProj.DisplayName: Cute Corrupt Jungle Slime
			// CuteSlimeCrimsonProj.DisplayName: Cute Crimson Slime
			// CuteSlimeCrimsonJungleProj.DisplayName: Cute Crimson Jungle Slime
			// CuteSlimeDungeonProj.DisplayName: Cute Dungeon Slime
			// CuteSlimeGoldenProj.DisplayName: Cute Golden Slime
			// CuteSlimeGreenProj.DisplayName: Cute Green Slime
			// CuteSlimeHoneyProj.DisplayName: Cute Honey Slime
			// CuteSlimeIceProj.DisplayName: Cute Ice Slime
			// CuteSlimeIlluminantProj.DisplayName: Cute Illuminant Slime
			// CuteSlimeJungleProj.DisplayName: Cute Jungle Slime
			// CuteSlimeLavaProj.DisplayName: Cute Lava Slime
			// CuteSlimePinkProj.DisplayName: Cute Pink Slime
			// CuteSlimePinkIceProj.DisplayName: Cute Pink Ice Slime
			// CuteSlimePrincessProj.DisplayName: Cute Princess Slime
			// CuteSlimePurpleProj.DisplayName: Cute Purple Slime
			// CuteSlimePurpleIceProj.DisplayName: Cute Purple Ice Slime
			// CuteSlimeQueenProj.DisplayName: Cute Queen Slime
			// CuteSlimeRainbowProj.DisplayName: Cute Rainbow Slime
			// CuteSlimeRedProj.DisplayName: Cute Red Slime
			// CuteSlimeRedIceProj.DisplayName: Cute Red Ice Slime
			// CuteSlimeSandProj.DisplayName: Cute Sand Slime
			// CuteSlimeShimmerProj.DisplayName: Cute Shimmer Slime
			// CuteSlimeToxicProj.DisplayName: Cute Toxic Slime
			// CuteSlimeXmasProj.DisplayName: Cute Christmas Slime
			// CuteSlimeYellowProj.DisplayName: Cute Yellow Slime
			// DemonHeartProj.DisplayName: Demon Heart
			// DetachedHungryProj.DisplayName: Detached Hungry

			DocileDemonEyeProj: {
				// DisplayName: Docile Demon Eye
				// Red.Tooltip: Red
				// Green.Tooltip: Green
				// Purple.Tooltip: Purple
				// RedFractured.Tooltip: Red Fractured
				// GreenFractured.Tooltip: Green Fractured
				// PurpleFractured.Tooltip: Purple Fractured
				// RedMechanical.Tooltip: Red Mechanical
				// GreenMechanical.Tooltip: Green Mechanical
				// PurpleMechanical.Tooltip: Purple Mechanical
				// RedLaser.Tooltip: Red Laser
				// GreenLaser.Tooltip: Green Laser
				// PurpleLaser.Tooltip: Purple Laser
				// FlyingPumpkin.Tooltip: Flying Pumpkin
				// FlyingJack.Tooltip: Flying Jack
			}

			// DrumstickElementalProj.DisplayName: Drumstick Elemental

			DynamiteBunnyProj: {
				// DisplayName: Dynamite Bunny
				// White.Tooltip: White
				// Corrupt.Tooltip: Corrupt
				// Crimtane.Tooltip: Crimtane
				// Angora.Tooltip: Angora
				// Dutch.Tooltip: Dutch
				// Flemish.Tooltip: Flemish
				// Lop.Tooltip: Lop
				// Silver.Tooltip: Silver
				// Caerbannog.Tooltip: Caerbannog
			}

			// EnchantedSwordProj.DisplayName: Enchanted Sword
			// FailureSlimeProj.DisplayName: Failure Slime
			// FairySlimeProj.DisplayName: Fairy Slime
			// FairySwarmProj.DisplayName: Fairy Swarm
			// GhostMartianProj.DisplayName: Ghost Martian
			// GobletProj.DisplayName: Goblet
			// HornedSlimeProj.DisplayName: Horned Slime
			// IlluminantSlimeProj.DisplayName: Illuminant Slime

			JoyousSlimeProj: {
				// DisplayName: Joyous Slime
				// Default.Tooltip: Default
				// JoyousPumpkin.Tooltip: Joyous Pumpkin
			}

			LifelikeMechanicalFrogProj: {
				// DisplayName: Lifelike Mechanical Frog
				// Default.Tooltip: Default
				// Crowned.Tooltip: Crowned
			}

			LilWrapsProj: {
				// DisplayName: Lil' Wraps
				// Default.Tooltip: Default
				// Dark.Tooltip: Dark
				// Light.Tooltip: Light
				// Shadow.Tooltip: Shadow
				// Spectral.Tooltip: Spectral
			}

			// MeatballProj.DisplayName: Meatball
			// MeatballSlimeProj.DisplayName: Meatball Slime

			MetroidPetProj: {
				// DisplayName: Metroid
				// Metroid.Tooltip: Metroid
				// FailedClone.Tooltip: Failed Clone
				// Convergent.Tooltip: Convergent
				// Irradiated.Tooltip: Irradiated
				// Corrupted.Tooltip: Corrupted
				// TheBaby.Tooltip: The Baby
			}

			MiniAntlionProj: {
				// DisplayName: Baby Antlion
				// Default.Tooltip: Default
				// Albino.Tooltip: Albino
				// Larval.Tooltip: Larval
			}

			// MiniMegalodonProj.DisplayName: Mini Megalodon
			// NumberMuncherProj.DisplayName: Number Muncher

			OceanSlimeProj: {
				// DisplayName: Ocean Slime
				// Default.Tooltip: Default
				// StupidHat.Tooltip: Stupid Hat
				// GnarlyGrin.Tooltip: Gnarly Grin
				// FlippedJelly.Tooltip: Flipped Jelly
				// AxolotlLucy.Tooltip: Axolotl (Lucy)
				// AxolotlBlue.Tooltip: Axolotl (Blue)
				// AxolotlCyan.Tooltip: Axolotl (Cyan)
				// AxolotlYellow.Tooltip: Axolotl (Yellow)
				// AxolotlBrown.Tooltip: Axolotl (Brown)
			}

			PetCultistProj: {
				// DisplayName: Dwarf Cultist
				// Lunar.Tooltip: Lunar
				// Solar.Tooltip: Solar
			}

			// PetDestroyer.DisplayName: Tiny Destroyer
			// PetDestroyerProbe.DisplayName: Tiny Destroyer Probe
			// PetEaterofWorlds.DisplayName: Tiny Eater of Worlds

			PetFishronProj: {
				// DisplayName: Mini Fishron
				// Default.Tooltip: Default
				// Sharkron.Tooltip: Sharkron
				// Sharknado.Tooltip: Sharknado
			}

			PetGoldfishProj: {
				// DisplayName: Pet Goldfish
				// Default.Tooltip: Default
				// Crimson.Tooltip: Crimson
				// Corruption.Tooltip: Corruption
				// Bunny.Tooltip: Bunny
				// Ghostfish.Tooltip: Ghostfish
			}

			// PetGolemHeadProj.DisplayName: Replica Golem Head
			// PetHarvesterProj.DisplayName: Stubborn Bird

			PetMoonProj: {
				// DisplayName: Personal Moon
				// Default.Tooltip: Default
				// Yellow.Tooltip: Yellow
				// Ringed.Tooltip: Ringed
				// Mythril.Tooltip: Mythril
				// BrightBlue.Tooltip: Bright Blue
				// Green.Tooltip: Green
				// Pink.Tooltip: Pink
				// Orange.Tooltip: Orange
				// Purple.Tooltip: Purple
			}

			// PetPlanteraProj.DisplayName: Plantera Sprout
			// PetPlanteraProjTentacle.DisplayName: Mean Seed Tentacle
			// PetQueenSlimeProj.DisplayName: Slime Sibling
			// PetSunProj.DisplayName: Personal Sun

			PigronataProj: {
				// DisplayName: Pigronata
				// Default.Tooltip: Default
				// Winter.Tooltip: Winter
				// Autumn.Tooltip: Autumn
				// Spring.Tooltip: Spring
				// Summer.Tooltip: Summer
				// Halloween.Tooltip: Halloween
				// Christmas.Tooltip: Christmas
			}

			// PrinceSlimeProj.DisplayName: Prince Slime

			QueenLarvaProj: {
				// DisplayName: Queen Bee Larva
				// Default.Tooltip: Default
				// PrawnLarva.Tooltip: PrawnLarva
				// UnexpectedSeed.Tooltip: Unexpected Seed
				// BigKidLarva.Tooltip: Big Kid Larva
				// WheresTheBaby.Tooltip: Where's The Baby?
			}

			// RainbowSlimeProj.DisplayName: Rainbow Slime

			SkeletronHandProj: {
				// DisplayName: Skeletron Pet Hand
				// Default.Tooltip: Default
				// OKHand.Tooltip: OK-Hand
				// Peace.Tooltip: Peace
				// RockIt.Tooltip: Rock It
				// Fist.Tooltip: Fist
			}

			SkeletronPrimeHandProj: {
				// DisplayName: Skeletron Prime Pet Hand
				// Cannon.Tooltip: Cannon
				// Saw.Tooltip: Saw
				// Vice.Tooltip: Vice
				// Laser.Tooltip: Laser
			}

			StingSlimeProj: {
				// DisplayName: Sting Slime
				// Black.Tooltip: Black
				// Orange.Tooltip: Orange
			}

			// StrangeRobotProj.DisplayName: Strange Robot
			// SuspiciousNuggetProj.DisplayName: Suspicious Nugget
			// SwarmofCthulhuProj.DisplayName: Swarm of Cthulhu
			// TinyRetinazerProj.DisplayName: Tiny Retinazer
			// TinySpazmatismProj.DisplayName: Tiny Spazmatism
			// TorchGodLightPetProj.DisplayName: Godly Torch
			// TorturedSoulProj.DisplayName: Tortured Soul
			// TrueObservingEyeProj.DisplayName: True Observing Eye
			// TurtleSlimeProj.DisplayName: Turtle Slime

			VampireBatProj: {
				// DisplayName: Vampire Bat
				// Default.Tooltip: Default
				// Werebat.Tooltip: Werebat
			}

			// WallFragmentEye1.DisplayName: Wall Eye
			// WallFragmentEye2.DisplayName: Wall Eye

			WallFragmentMouth: {
				// DisplayName: Wall Mouth
				// Default.Tooltip: Default
				// Chinese.Tooltip: Chinese
			}

			// WobyProj.DisplayName: Woby
			// WobyProj_AoMM.DisplayName: Big Woby

			YoungHarpyProj: {
				// DisplayName: Young Harpy
				// Default.Tooltip: Default
				// Eagle.Tooltip: Eagle
				// Raven.Tooltip: Raven
				// Dove.Tooltip: Dove
				// DefaultLegacy.Tooltip: Default (Legacy)
				// EagleLegacy.Tooltip: Eagle (Legacy)
				// RavenLegacy.Tooltip: Raven (Legacy)
				// DoveLegacy.Tooltip: Dove (Legacy)
			}

			YoungWyvernProj: {
				// DisplayName: Young Wyvern
				// Default.Tooltip: Default
				// Mythical.Tooltip: Mythical
				// Arch.Tooltip: Arch
				// ArchLegacy.Tooltip: Arch (Legacy)
			}

			// ExtendoNetGoldenProj.DisplayName: EXTENDO!
			// ExtendoNetRegularProj.DisplayName: EXTENDO!
			// BoneCleavingFangProj.DisplayName: "{$Items.BoneCleavingFang.DisplayName}"
			// BoneShatterLongbowProj.DisplayName: "{$Items.BoneShatterLongbow.DisplayName} Arrow"
			// CandleDustDummy.DisplayName: Candle Dust Dummy
			// GuideVoodoorangProj.DisplayName: "{$Items.GuideVoodoorang.DisplayName}"
			// LegendaryWoodenSwordProj.DisplayName: "{$Items.LegendaryWoodenSword.DisplayName}"
			// PlagueOfToadsCloud.DisplayName: "{$Items.PlagueOfToads.DisplayName}"
			// PlagueOfToadsFired.DisplayName: "{$Items.PlagueOfToads.DisplayName}"
			// PlagueOfToadsProj.DisplayName: "{$Items.PlagueOfToads.DisplayName}"
			// PocketSandProj.DisplayName: "{$Items.PocketSand.DisplayName}"
			// SightofRetinazerLaser.DisplayName: "{$Items.SightofRetinazer.DisplayName} Laser"
			// BreathOfSpazmatismProj.DisplayName: "{$Items.BreathOfSpazmatism.DisplayName}"
			// TalonstormClawProj.DisplayName: "{$Items.Talonstorm.DisplayName}"
			// TalonstormFiredProj.DisplayName: "{$Items.Talonstorm.DisplayName}"
			// TalonstormProj.DisplayName: "{$Items.Talonstorm.DisplayName}"
			// TrueLegendaryWoodenSwordProj.DisplayName: "{$Items.TrueLegendaryWoodenSword.DisplayName}"
			// AlienHornetShotProj.DisplayName: "{$Projectiles.AlienHornetProj.DisplayName} Shot"
			// AnimatedTomeShotProj.DisplayName: "{$Projectiles.AnimatedTomeProj.DisplayName} Shot"
			// BabyIchorStickerShotProj.DisplayName: "{$Projectiles.BabyIchorStickerProj.DisplayName} Shot"
			// BabyOcramShotProj.DisplayName: "{$Projectiles.BabyOcramProj.DisplayName} Shot"
			// CuteGastropodShotProj.DisplayName: "{$Projectiles.CuteGastropodProj.DisplayName} Shot"
			// CuteLamiaPetShotProj.DisplayName: "{$Projectiles.CuteLamiaPetProj.DisplayName} Shot"
			// DemonHeartShotProj.DisplayName: "{$Projectiles.DemonHeartProj.DisplayName} Shot"
			// DocileDemonEyeShotProj.DisplayName: "{$Projectiles.DocileDemonEyeProj.DisplayName} Shot"
			// DrumstickElementalShotProj.DisplayName: "{$Projectiles.DrumstickElementalProj.DisplayName} Shot"
			// FairySwarmShotProj.DisplayName: "{$Projectiles.FairySwarmSProj.DisplayName} Shot"
			// GhostMartianShotProj.DisplayName: "{$Projectiles.GhostMartianProj.DisplayName} Shot"
			// NumberMuncherShotProj.DisplayName: "{$Projectiles.NumberMuncherProj.DisplayName} Shot"
			// SkeletronPrimeHandBombShotProj.DisplayName: "{$Projectiles.SkeletronPrimeHandProj.DisplayName} Bomb Shot"
			// SkeletronPrimeHandLaserShotProj.DisplayName: "{$Projectiles.SkeletronPrimeHandProj.DisplayName} Laser Shot"
			// StrangeRobotShotProj.DisplayName: "{$Projectiles.StrangeRobotProj.DisplayName} Shot"
			// SwarmofCthulhuShotProj.DisplayName: "{$Projectiles.SwarmofCthulhuProj.DisplayName} Shot"
			// TinyRetinazerShotProj.DisplayName: "{$Projectiles.TinyRetinazerProj.DisplayName} Shot"
			// TinySpazmatismShotProj.DisplayName: "{$Projectiles.TinySpazmatismProj.DisplayName} Shot"
			// TorturedSoulShotProj.DisplayName: "{$Projectiles.TorturedSoulProj.DisplayName} Shot"
			// WallFragmentEyeShotProj.DisplayName: "{$Projectiles.WallFragmentEye1.DisplayName} Shot"

			PetCloudfishProj: {
				// Default.Tooltip: Default
				// Rain.Tooltip: Rain
				// Snow.Tooltip: Snow
				// DisplayName: "{$Items.PetCloudfishItem.DisplayName}"
			}

			KingGuppyProj: {
				// Default.Tooltip: Default
				// Hungry.Tooltip: Hungry
				// DisplayName: "{$Items.KingGuppyItem.DisplayName}"
			}

			// PetDreadnautilusProj.DisplayName: "{$Items.PetDreadnautilusItem.DisplayName}"
			// PetDreadnautilusShotProj.DisplayName: "{$Projectiles.PetDreadnautilusProj.DisplayName} Shot"
			// PetCloudfishShotProj.DisplayName: "{$Projectiles.PetCloudfishProj.DisplayName} Shot"
			// KingGuppyShotProj.DisplayName: "{$Projectiles.KingGuppyProj.DisplayName} Shot"

			ShortfuseCrabProj: {
				// Yellow.Tooltip: Yellow
				// Orange.Tooltip: Orange
				// Red.Tooltip: Red
				// Blue.Tooltip: Blue
				// Black.Tooltip: Black
				// Gold.Tooltip: Gold
				// DisplayName: "{$Items.ShortfuseCrabItem.DisplayName}"
			}
		}

		Tiles: {
			// MapEntry_Locked: Locked
			// AntiqueChestTile.MapEntry_Locked: "{$Tiles.MapEntry_Locked} {$Items.AntiqueChestItem.DisplayName}"

			SlimeBeaconTile: {
				// NotInMultiplayer: NOT IN MULTIPLAYER
				// Activated: Background Activated
				// Deactivated: Background Deactivated
			}

			VanityDresserTile: {
				/* Mouseover:
					'''
					Costume Dresser
					Left Click to change your Pet's appearance
					Right Click to change your Light Pet's appearance
					''' */
				// WorkProperly: For this to work properly, don't have any item selected
				// NoCostumesFoundPet: No alt costumes found for pet
				// NoCostumesFoundLightPet: No alt costumes found for light pet
			}

			AntiqueCageUnlockedTile: {
				// NotInDungeon: Cannot open cage, not in dungeon
				// AlreadyAlive: "{$NPCs.HarvesterBoss.DisplayName} is already alive, cage cannot be opened"
			}
		}

		Conditions: {
			// UnlockedBiomeTorches: If {$ItemName.TorchGodsFavor} was already used
			// DroneTypeNotUnlocked: If it isn't unlocked yet
		}

		DropConditions: {
			// MatchAppearanceCondition.Description: Drops based on appearance
			// NotAllDronePartsUnlockedCondition.Description: Drops if not all {$Items.DroneParts.DisplayName} are unlocked yet
			// NoHasItemWithBankCondition.Description: Only if {0} is not in the closest players inventory or banks
		}

		Announcements: {
			// SigilOfTheWingDeath: "{0} has died, but their soul has not given up..."
			// SoulHarvesterDeath: The Dungeon Souls have been freed!
			// SoulHarvesterBossAppear: "{$NPCs.HarvesterBoss.DisplayName} has been awakened!"
			// SpawnOfOcramAppear: "{$NPCs.SpawnOfOcram.DisplayName} has appeared!"
			// MegalodonAppear: A {$NPCs.Megalodon.DisplayName} is approaching! Get out of the ocean!
			// BigEnemyDisappear: The {0} disappeared... for now
			// SoulHarvesterBabyAppear: You hear a faint cawing from the dungeon.
			// SoulHarvesterBabyCageAppear: A hungry bird has been released!
		}

		SoulData: {
			DungeonSoul: {
				// DisplayName: Dungeon {^0:Soul;Souls}
				// Unlock: ""
				// Description: ""
			}

			SoulofFright: {
				// DisplayName: "{^0:Soul;Souls} of Fright"
				// Unlock: Defeat {$NPCName.SkeletronPrime}
				// Description: Inflicts {$BuffName.Ichor} and {$BuffName.Venom}
			}

			SoulofSight: {
				// DisplayName: "{^0:Soul;Souls} of Sight"
				// Unlock: Defeat {$Enemies.TheTwins}
				// Description: Inflicts {$BuffName.CursedInferno}
			}

			SoulofMight: {
				// DisplayName: "{^0:Soul;Souls} of Might"
				// Unlock: Defeat {$NPCName.TheDestroyer}
				// Description: ""
			}

			/* TooltipFormat:
				'''
				{0}
				{1}
				{2}
				{3}
				''' */
		}

		DroneData: {
			BasicLaserDrone: {
				// DisplayName: Basic Laser {^0:Drone;Drones}
				// ComponentName: "{$Items.DroneUnlockableBasicLaserDrone.DisplayName}"
				// Firerate: High
				// Description: Rapidly fires lasers
				// Misc: ""
			}

			HeavyLaserDrone: {
				// DisplayName: Heavy Laser {^0:Drone;Drones}
				// ComponentName: "{$Items.DroneUnlockableHeavyLaserDrone.DisplayName}"
				// Firerate: Extremely slow
				// Description: Fires a penetrating laser after a long delay
				// Misc: ""
			}

			MissileDrone: {
				// DisplayName: Missile {^0:Drone;Drones}
				// ComponentName: "{$Items.DroneUnlockableMissileDrone.DisplayName}"
				// Firerate: Very slow
				// Description: Fires a salvo of missiles after a long delay
				// Misc: ""
			}

			HealingDrone: {
				// DisplayName: Healing {^0:Drone;Drones}
				// ComponentName: "{$Items.DroneUnlockableHealingDrone.DisplayName}"
				// Firerate: ""
				// Description: Heals you when hurt
				// Misc: Only one can be summoned
			}

			ShieldDrone: {
				// DisplayName: Shield {^0:Drone;Drones}
				// ComponentName: "{$Items.DroneUnlockableShieldDrone.DisplayName}"
				// Firerate: ""
				// Description: Creates a damage reducing shield over time
				/* Misc:
					'''
					Only one can be summoned
					Shield resets if drone despawns
					''' */
			}

			/* TooltipFormat:
				'''
				{0}
				{1}
				{2}
				{3}
				{4}
				''' */
			/* TooltipFormatNoCombat:
				'''
				{0}
				{1}
				{2}
				''' */
		}

		Configs: {
			ClientConfig: {
				// DisplayName: Client Config

				Headers: {
					/* GoblinUnderling:
						'''
						Goblin Underlings - Minion Options

						These apply to the following items:
						{$Items.EagerUnderlingItem.DisplayName}
						{$Items.SeriousUnderlingItem.DisplayName}
						{$Items.ShyUnderlingItem.DisplayName}
						''' */
					// HintServerConfig: Hint: To go to the server config containing more Goblin Underling settings and other feature toggles, press the '>' arrow in the bottom right
				}

				GoblinUnderlingAutosummon: {
					// Label: Auto-summon
					// Tooltip: Enable to auto-summon this minion upon spawning if the item is in your inventory or open Void Bag
				}

				GoblinUnderlingVisibleArmor: {
					// Label: Armor progression
					// Tooltip: Enable to show armor progression
				}

				GoblinUnderlingVisibleRocketBoots: {
					// Label: Rocket Boots
					// Tooltip: Enable to show rocket boots (with progression) while flying
				}

				GoblinUnderlingChatterFreq: {
					// Label: Dialogue frequency
					// Tooltip: Control how often this minion will display dialogue (in percent). 0 for off
				}

				Hint: {
					// Label: Hint
					// Tooltip: ""
				}
			}

			ContentConfig: {
				// DisplayName: Content Config (Server)

				Headers: {
					/* TogglesSpecial:
						'''
						The following toggles let you control content added by this mod

						Special - Toggles which take priority over other relevant config options
						''' */
					// NPCs: NPCs
					// Items: Items
					// Other: Other
					// HintClientConfig: Hint: To go to the client config containing individual adjustments, press the '<' arrow in the bottom left
				}

				Bosses: {
					// Label: Bosses
					// Tooltip: Boss content
				}

				CuteSlimes: {
					// Label: Cute Slimes
					// Tooltip: Cute slime content
				}

				HostileNPCs: {
					// Label: Hostile
					// Tooltip: Harmful entities - This includes pets obtained by catching
				}

				FriendlyNPCs: {
					// Label: Friendly
					// Tooltip: Harmless entities - This includes pets obtained by catching
				}

				DroppedPets: {
					// Label: Dropped Pets
					// Tooltip: Pets that drop from hostile entities
				}

				OtherPets: {
					// Label: Other Pets
					// Tooltip: Pets that are crafted, sold, or otherwise obtained - This does not include NPCs caught as pets!
				}

				Weapons: {
					// Label: Weapons
					// Tooltip: Items that deal damage - Includes ammunition
				}

				Tools: {
					// Label: Tools
					// Tooltip: Tools and useful items
				}

				PlaceablesFunctional: {
					// Label: Placeables (functional)
					// Tooltip: Placeable functional tiles and objects
				}

				PlaceablesDecorative: {
					// Label: Placeables (decorative)
					// Tooltip: Placeable decorative tiles and objects
				}

				Armor: {
					// Label: Armor
					// Tooltip: Armor with stats
				}

				VanityArmor: {
					// Label: Vanity
					// Tooltip: Vanity armor
				}

				Accessories: {
					// Label: Accessories
					// Tooltip: Accesssories with effects
				}

				VanityAccessories: {
					// Label: Vanity Accessories
					// Tooltip: Accessories without effects
				}

				BossConsolation: {
					// Label: Boss Consolation
					// Tooltip: Accessories that drop for failing to defeat a vanilla boss within 5 attempts
				}

				AommSupport: {
					// Label: "'The Amulet Of Many Minions' cross-Mod content"
					// Tooltip: Content that is available when the 'The Amulet Of Many Minions' mod is enabled, such as combat pets
				}

				CuteSlimesPotionOnly: {
					// Label: Cute Slimes Potion Only
					// Tooltip: Affects the way Cute Slimes spawn and how the Jellied Ale works
				}

				GoblinUnderlingPostMLDamageScaling: {
					// Label: Goblin Underling Post-ML Damage Scaling
					/* Tooltip:
						'''
						Active after Moon Lord has been defeated, used to configure the damage multiplier of the Goblin Underling minions.
						For reference, the maximum multiplier is suitable for the final bosses in Calamity Mod
						''' */
				}

				Hint: {
					// Label: Hint
					// Tooltip: ""
				}
			}
		}

		Chatter: {
			GoblinUnderling: {
				Eager: {
					Idle: {
						// Bored: I'm bored, boss!
						// WhenFighting: When's da fighting, boss?
						// HangingOut: I like hangin' out, boss!
						// GoodBoss: You's a good boss, boss!
						// BossSilent: Boss is always silent. So cool!
						// HateSlimes: I hate slimes, dey're sticky!
						// WhenMeal: When's meal time?
						// DoYouLikeMe: Do ya like me, boss?
						// GettingSleepy: I'm gettin' sleepy, boss...
						// SeeBase: I can see our base from up here!
						// SandInArmor: I got sand in my armor!
						// GroundLooking: The ground's lookin' at me!
						// BeatTheCold: I'll beat da cold by workin up a sweat!
						// FaceLooksLikeRock: Dat rock looks like your face, boss!
						// RockLooksLikeBones: Dose rocks look like bones
						// FindShinyMetals: I hope we find shiny metals!
						// NothingScares: Nothin' scares me when I'm wit you, boss!
						// HeardRat: I think I heard a rat. A big rat!
						// CavesSpooky: Caves are spooky!
					}

					// FirstSummon.YouTheBoss: You da boss now, boss!

					Attacking: {
						// Gotcha: Gotcha!
						// IGotThis: I got dis one!
						// ExpGold: I'm a goblin! If you beat me, you get 1 exp and 2 gold!
						// NoOneTouches: No one touches boss!
						// BadGuys: Bad guys get black eyes!
						// ComeHere: C'mere, you!
						// LevelOne: I'm level one! I'm da strongest gob!
						// StabStab: Stab stab stab!
						// Boom: Boom! Haha!
						// Skewer: Gonna skewer ya!
					}

					PlayerHurt: {
						// DontHurt: Don't hurt da boss!
						// YouWillPay: You'll pay for dat!
						// YouGood: You good, boss?!
						// ThatHurt: Dat looked like it hurt, boss!
						// IsntWeak: Da boss ain't weak, chump!
					}

					PlayerHurtByTrap: {
						// WallsAttack: Da walls attack too?!
						// WatchWalls: Watch da walls, boss!
						// BadWall: Bad wall! Don't hurt boss!
						// GroundEnemy: Da ground is an enemy?!
						// HotHot: Hot! Hot!
						// MissThat: How'd ya miss dat, boss?
						// Dangerous: Dat's dangerous!
						// NoFair: No fair! I can't hit dose!
						// BadPeople: Bad people made bad traps!
						// BigBadBalls: Big bad balls!
						// DontFlattened: Don't get flattened, boss!
						// HadToHurt: Dat had ta hurt!
					}

					BossSpawn: {
						// UhOh: Uh oh!
						// BigOne: Dat's a biggun!
						// ThatOnesBig: Boss, dat one's big!
						// NotAfraid: I ain't afraid of nothin!
						// WeGotTrouble: Boss, we got trouble!
						// HateBees: I hate bees!
						// WontReadBook: I won't read da big book!
						// OneEyedDummy: Big one-eyed dummy!
						// BigGuts: Dat one's big! Dat means it has big guts!
						// WeGotThis: We got dis, boss!
						// JigglyJellyfish: Haha, jiggly jellyfish!
						// FatBat: Dat's a fat bat!
					}

					BossDefeat: {
						// WeDidIt: We did it, boss!
						// KnewYouCould: I knew you could do it!
						// EasyNext: Easy. Next!
						// WontBeInSequel: You won't be in da sequel!
						// NastyBees: Nasty bees! Only good for da honey!
						// StupidBook: Stupid book man!
						// DumbWeakling: Big dumb weakling!
						// DumbDragon: Dumb dragon, boss is da strongest!
						// YouTheBest: Boss, you da best!
						// ToughTougher: Dat one was tough, but we're tougher!
						// NoMoreSquid: I don't wanna see no more squid after dis...
						// JellyTastesBad: Blech! Dat jelly tastes bad!
						// SuckOnThat: Suck on dat, fat bat!
					}

					// OOAStarts.WhatDidYouDo: Boss, what didja do?!

					OOANewWave: {
						// HolesStillOpen: Boss, dem holes are still open!
						// MoreBaddies: More baddies? More baddies!
						// ProtectGem: Protect da shiny gem!
						// WontLetPass: I won't let em pass, boss!
					}

					ArmorEquipped: {
						// LookingSpiffy: Lookin' spiffy, boss!
						// LookingFluffy: Lookin' fluffy, boss!
					}

					// ItemSelected.IsAToy: Is dat a toy?
					// InvasionChanged.OldGangBack: Old gang is back!
					// BloodMoonChanged.SkyIsRed: Boss, da sky is red! It's scary!
				}

				Serious: {
					Idle: {
						// Peaceful: It's peaceful.
						// YouSeemCalm: You seem calm, boss.
						// ShallWeRest: Boss, shall we rest here?
						// PaceEasy: Your pace is easy to follow.
						// ShouldSleep: We should sleep soon.
						// WindNice: The wind feels nice.
						// WarmWithFire: I can warm you with fire if you'd like.
						// SandsClaimWeak: The sands claim the weak.
						// UnnaturalPlace: This place is unnatural.
						// NotDawdle: We should not dawdle here.
						// SpiritsHide: Spirits hide in the darkness.
						// StonesHistory: These stones have untold history.
						// HiddenTreasure: There may be hidden treasure here.
						// BeCareful: Be careful in the dark, boss.
						// TooFarAhead: Boss... please don't go too far ahead.
					}

					// FirstSummon.Greetings: Greetings, boss.

					Attacking: {
						// IGotThis: I've got this.
						// NotDefy: Do not defy the boss.
						// NotSurvive: You will not survive.
						// CutDown: I will cut you down.
						// Burn: Burn.
						// StruckDown: Be struck down by my spells.
						// InSights: You are in my sights.
					}

					PlayerHurt: {
						// Alright: Are you alright?
						// Unpleasant: That looks unpleasant.
						// Tough: You're tough, boss.
						// Healing: Do you need healing?
					}

					PlayerHurtByTrap: {
						// WatchStep: Watch where you step, boss.
						// PressurePlates: Be mindful of pressure plates.
						// CowardlyTrap: A cowardly trap...
						// BossNotSee: Boss, did you not see that?
						// NaturalTrap: A natural trap.
						// MinorBurn: Lucky that it was only a minor burn.
						// TrapCruel: That trap is too cruel.
						// TakeTime: Take your time, boss.
						// CruelPeople: What cruel people made these traps...
						// Weighed: That must have weighed quite a bit.
						// INotSee: I did not see that coming.
						// FromDistance: Try to trigger those from a distance.
					}

					BossSpawn: {
						// LargeEnemy: A large enemy approaches.
						// Formidable: A formidable foe.
						// Prepared: We should be prepared for this.
						// Trust: I trust you, boss.
						// TerribleNight: What a terrible night for a curse.
						// MagicSuperior: Whose magic is superior, I wonder.
						// SenseIntelligence: I can't sense any intelligence from that one.
						// HidingDragon: They were hiding a dragon?
						// CantLose: Boss, you can't lose here.
						// WastedFirstLife: You wasted your first life.
						// ForceOvercome: There is no force we cannot overcome.
					}

					BossDefeat: {
						// MakeDoll: I will make a doll in your memory.
						// TooEasy: That was too easy for you, boss.
						// Overcame: We overcame that challenge.
						// WellDone: Well done, boss.
						// CurseLifted: The curse is lifted.
						// BetterMage: I am the better mage.
						// Joke: What a joke.
						// ExpectedMore: I expected more. Shame.
						// Incredible: Boss... you're incredible!
						// WastedSecondLife: You also wasted your second life.
						// Greatest: Boss, you really are the greatest.
					}

					// OOAStarts.WhatMagic: What sort of magic is this?

					OOANewWave: {
						// NotOverYet: This isn't over yet.
						// MoreFoes: More foes approach, boss.
						// ProtectGem: I will protect the gem.
						// ArmyEndless: This army is endless...
					}

					// ArmorEquipped.OddThings: Boss... You do odd things at times.
					// ItemSelected.ThatDoll: That doll... be careful, boss.
					// InvasionChanged.FoolsReturned: Those fools have returned.
					// BloodMoonChanged.HeadUnbearable: My head... it's unbearable...
				}

				Shy: {
					Idle: {
						// LikeNoFight: I like when we don't have to fight.
						// FeelSafe: You make me feel safe, boss.
						// RunIntoBad: I hope we don't run into bad guys.
						// WatchStep: Please watch your step, boss.
						// Nevermind: Boss, I... ah... nevermind.
						// ShouldRest: You should rest, boss.
						// GoHome: W-we should probably go home, boss...
						// PleasantWind: Such pleasant wind...
						// SnowCold: So this is snow... so cold!
						// PlaceScary: B-boss... this place is s-scary!
						// EveryoneNice: Everyone here is nice.
						// SeeStars: Boss, look! We can see the stars!
						// WatchFooting: Watch your footing, boss!
						// SawMouse: Eep!...Sorry boss, I saw a mouse...
						// DontLeave: B-boss... Please don't leave me...
						// Scared: I-I'm scared...
					}

					// FirstSummon.NiceToMeet: N-nice to meet you, boss.

					Attacking: {
						// NotEscape: You will not escape...
						// SeeDead: I will see you dead...
						// TargetSighted: Target sighted...
						// Eliminated: You will be eliminated...
						// BossesBlade: I am the boss's blade...
						// Burn: Burn...
						// WontMiss: I won't miss twice...
						// PleaseLeave: Please... leave... before I...
					}

					PlayerHurt: {
						// YouAlright: Boss, are you alright?
						// OhNo: Oh no, boss!
						// DontDie: Please don't die, boss!
						// Boss: Boss!
					}

					PlayerHurtByTrap: {
						// HopeOkay: I hope you're okay, boss...
						// TreatingWound: Be careful when treating that wound...
						// CoolDown: We should cool that down...
						// SeeSooner: I'm sorry I didn't see that sooner...
						// NatureCruel: Nature can be so cruel...
						// AwfulTraps: Who would make such awful traps...
						// TreatWound: We need to treat that wound!
						// Barbaric: How barbaric...
						// BadlyHurt: You're badly hurt, boss!
						// MoreCautious: Please be more cautious, boss!
						// DontLetHit: Please don't let those hit you anymore!
					}

					BossSpawn: {
						// WhatIsThat: Boss... Boss! What is that?!
						// LargeEnemy: Such a large enemy... can we win?
						// DoMyBest: I-I'll do my best, boss!
						// LooksDangerous: T-that one looks dangerous...
						// HesHuge: H-he's huge...
						// Dragon: Ah! Dragon!
						// Pretty: What a pretty... Boss! Look out!
						// NotAgain: No... not again...!
						// WontBeAfraid: I won't be afraid. I'll do my best!
						// RocksMoving: T-the rocks are moving, boss!
						// TheyAreBack: A-ah... t-they're back...
					}

					BossDefeat: {
						// WasScary: T-That was scary, but we won!
						// WasntUseful: I'm sorry that I wasn't useful, boss...
						// YouWereGreat: You were great, boss!
						// CouldDoIt: I-I knew you could do it!
						// GladItsOver: I'm glad that's over...
						// TheBiggerTheyAre: The bigger they are, the harder they fall.
						// DontFight: I hope we don't fight another one of those...
						// Distracted: I'm sorry that I was distracted...
						// WontBeTaken: I... I won't be taken again!
						// YouDidIt: You did it... you really did it, boss!
						// WeirdFight: That was a weird fight...
						// ThankYou: Thank you, boss. For being here.
					}

					// OOAStarts.WhatHoles: Boss... w-what are those holes?

					OOANewWave: {
						// MoreOfThem: T-there's more of them?
						// MoreFoes: More foes approach, boss.
						// WhenEnd: When will it end?
						// GemSafe: The gem is safe... for now...
					}

					ArmorEquipped: {
						// ItsYou: Ah!... Oh, it's you, boss...
						// SeeingFace: I like seeing your face, boss.
					}

					// InvasionChanged.MustFight: No... why must we fight?
					// BloodMoonChanged.BodyHurts: Boss... my body hurts...
				}

				Eager_Serious: {
					Dialogue: {
						// 0Eager: Can I have anotha doll?
						// 1Serious: You tore or lost the last few.
						// 2Eager: I won't dis time!
						// 3Serious: ...Fine. I'll make one later, alright?
						// 4Eager: Yay!
					}
				}

				Eager_Shy: {
					Dialogue: {
						// 0Eager: Hey!
						// 1Shy: Ah... yes?
						// 2Eager: Dere's a rat behind ya!
						// 3Shy: Eep!
						// 4Eager: Tricked ya! Haha, dat was loud!
					}
				}

				Serious_Eager: {
					Dialogue: {
						// 0Serious: You tore your doll again...
						// 1Eager: It was an accident!
						// 2Serious: Like the other times?
						// 3Eager: Yeah!
						// 4Serious: ...I'll mend it later.
						// 5Eager: Thanks!
					}
				}

				Serious_Shy: {
					Dialogue: {
						// 0Serious: Hey.
						// 1Shy: ...yes?
						// 2Serious: Would you like a doll?
						// 3Shy: A doll?
						// 4Serious: Yes. To calm your nerves.
						// 5Shy: ...yes, please.
						// 6Serious: I'll prepare it later then.
					}
				}

				Shy_Eager: {
					Dialogue: {
						// 0Shy: Um...
						// 1Eager: Yeah?
						// 2Shy: H-how are you always so cheerful?
						// 3Eager: Cause the boss is here!
						// 4Shy: You really l-like the boss, huh?
						// 5Eager: Yeah! Da boss is da strongest!
					}
				}

				Shy_Serious: {
					Dialogue: {
						// 0Shy: Um... excuse me...
						// 1Serious: Yes?
						// 2Shy: Y-your dolls...
						// 3Serious: ?
						// 4Shy: They're cute...
						// 5Serious: Thank you.
					}
				}

				Eager_Serious_Shy: {
					Dialogue: {
						// 0Eager: You good?
						// "1Serious, Shy": Yes.
						// 2Eager: Den all togetha;
						// 3All: We like you, boss!
					}
				}
			}
		}

		GoblinUnderlingClass: {
			// Melee: Melee
			// Magic: Magic
			// Ranged: Ranged
		}

		UI: {
			// CircleUIToUnlock: To unlock: {0}
			// HoverNPCUICatchWithNet: Catch it with a net
		}
	}
}
